{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/toolbar/toolbar.component.css","webpack:///./src/app/components/toolbar/toolbar.component.html","webpack:///./src/app/components/toolbar/toolbar.component.ts","webpack:///./src/app/components/tools/copy/copy.component.css","webpack:///./src/app/components/tools/copy/copy.component.html","webpack:///./src/app/components/tools/copy/copy.component.ts","webpack:///./src/app/components/tools/delete/delete.component.css","webpack:///./src/app/components/tools/delete/delete.component.html","webpack:///./src/app/components/tools/delete/delete.component.ts","webpack:///./src/app/components/tools/dimension/dimension.component.css","webpack:///./src/app/components/tools/dimension/dimension.component.html","webpack:///./src/app/components/tools/dimension/dimension.component.ts","webpack:///./src/app/components/tools/edit/edit.component.html","webpack:///./src/app/components/tools/edit/edit.component.scss","webpack:///./src/app/components/tools/edit/edit.component.ts","webpack:///./src/app/components/tools/link/link.component.html","webpack:///./src/app/components/tools/link/link.component.scss","webpack:///./src/app/components/tools/link/link.component.ts","webpack:///./src/app/components/tools/new/new.component.css","webpack:///./src/app/components/tools/new/new.component.html","webpack:///./src/app/components/tools/new/new.component.ts","webpack:///./src/app/components/tools/search/search.component.html","webpack:///./src/app/components/tools/search/search.component.scss","webpack:///./src/app/components/tools/search/search.component.ts","webpack:///./src/app/components/viewer/viewer.component.css","webpack:///./src/app/components/viewer/viewer.component.html","webpack:///./src/app/components/viewer/viewer.component.ts","webpack:///./src/app/components/views/graph/graph.component.css","webpack:///./src/app/components/views/graph/graph.component.html","webpack:///./src/app/components/views/graph/graph.component.ts","webpack:///./src/app/components/views/grid/graph-grid/graph-grid.component.css","webpack:///./src/app/components/views/grid/graph-grid/graph-grid.component.html","webpack:///./src/app/components/views/grid/graph-grid/graph-grid.component.ts","webpack:///./src/app/components/views/grid/grid-grid/grid-grid.component.css","webpack:///./src/app/components/views/grid/grid-grid/grid-grid.component.html","webpack:///./src/app/components/views/grid/grid-grid/grid-grid.component.ts","webpack:///./src/app/components/views/grid/grid.component.css","webpack:///./src/app/components/views/grid/grid.component.html","webpack:///./src/app/components/views/grid/grid.component.ts","webpack:///./src/app/components/views/grid/gridster-config.service.ts","webpack:///./src/app/components/views/grid/network-grid/network-grid.component.css","webpack:///./src/app/components/views/grid/network-grid/network-grid.component.html","webpack:///./src/app/components/views/grid/network-grid/network-grid.component.ts","webpack:///./src/app/components/views/grid/timeline-grid/timeline-grid.component.css","webpack:///./src/app/components/views/grid/timeline-grid/timeline-grid.component.html","webpack:///./src/app/components/views/grid/timeline-grid/timeline-grid.component.ts","webpack:///./src/app/components/views/network/network.component.css","webpack:///./src/app/components/views/network/network.component.html","webpack:///./src/app/components/views/network/network.component.ts","webpack:///./src/app/components/views/timeline/timeline.component.css","webpack:///./src/app/components/views/timeline/timeline.component.html","webpack:///./src/app/components/views/timeline/timeline.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/notAuth.guard.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/internal.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core'; \r\nimport { HomeComponent } from './components/home/home.component'; \r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { ViewerComponent } from './components/viewer/viewer.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'public', component: ViewerComponent, canActivate: [AuthGuard] \r\n  }, \r\n  { path: 'register', component: RegisterComponent, canActivate: [NotAuthGuard] \r\n  },  \r\n  { path: 'login', component: LoginComponent, canActivate: [NotAuthGuard] \r\n  },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] \r\n  },\r\n  { path: 'viewer', component: ViewerComponent, canActivate: [AuthGuard] \r\n  },\r\n  { path: 'viewer/:id', component: ViewerComponent, canActivate: [AuthGuard] \r\n  },\r\n  {\r\n  \tpath: '**', component: HomeComponent\r\n  }\r\n  ];\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"        <app-navbar></app-navbar>\\r\\n        <app-toolbar></app-toolbar>\\r\\n        <router-outlet></router-outlet>\\r\\n        \\r\\n       \"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Complexity-App';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { DataService } from './services/data.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { NewComponent } from './components/tools/new/new.component';\r\nimport { MaterialModule } from './material.module';\r\nimport { ViewerComponent } from './components/viewer/viewer.component';\r\nimport { InternalService } from './services/internal.service';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { SearchComponent } from './components/tools/search/search.component';\r\nimport { EditComponent } from './components/tools/edit/edit.component';\r\nimport { CopyComponent } from './components/tools/copy/copy.component';\r\nimport { LinkComponent } from './components/tools/link/link.component';\r\nimport { DeleteComponent } from './components/tools/delete/delete.component';\r\nimport { DimensionComponent } from './components/tools/dimension/dimension.component';\r\nimport { TimelineComponent } from './components/views/timeline/timeline.component';\r\nimport { NetworkComponent } from './components/views/network/network.component';\r\nimport { GraphComponent } from './components/views/graph/graph.component';\r\nimport { GridComponent } from './components/views/grid/grid.component';\r\nimport { GridsterModule } from 'angular-gridster2';\r\nimport { GridsterConfigService } from './components/views/grid/gridster-config.service';\r\nimport { GraphGridComponent } from './components/views/grid/graph-grid/graph-grid.component';\r\nimport { TimelineGridComponent } from './components/views/grid/timeline-grid/timeline-grid.component';\r\nimport { NetworkGridComponent } from './components/views/grid/network-grid/network-grid.component';\r\nimport { GridGridComponent } from './components/views/grid/grid-grid/grid-grid.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    NewComponent,\r\n    ViewerComponent,\r\n    ToolbarComponent,\r\n    SearchComponent,\r\n    EditComponent,\r\n    CopyComponent,\r\n    LinkComponent,\r\n    DeleteComponent,\r\n    DimensionComponent,\r\n    TimelineComponent,\r\n    NetworkComponent,\r\n    GraphComponent,\r\n    GridComponent,\r\n    GraphGridComponent,\r\n    TimelineGridComponent,\r\n    NetworkGridComponent,\r\n    GridGridComponent\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    GridsterModule\r\n  ],\r\n  providers: [AuthService, AuthGuard, NotAuthGuard, DataService, InternalService, GridsterConfigService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".context {\\r\\n    font-size: 25px;\\r\\n\\r\\n}\\r\\n.card {\\r\\n    margin-right: 20px;\\r\\n    margin-left: 20px;\\r\\n}\\r\\n.mat-success {\\r\\n    background-color: white;\\r\\n    color: #fff;\\r\\n}\"","module.exports = \"<mat-card class=\\\"card\\\">\\r\\n\\t<mat-card-title>Welcome to the Complexity-App</mat-card-title>\\r\\n\\t<mat-card-content>\\r\\n\\t\\tThe Complexity-App is a tool to (someday in the future) help you visualise and express complex thoughts.\\r\\n\\t\\t<br>\\r\\n\\t\\t<br> At the moment this site is still in development.\\r\\n\\t\\t<br> For more information contact loebboas -@- gmail.com.\\r\\n\\t</mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card class=\\\"card\\\">\\r\\n\\t<mat-card-title>About us</mat-card-title>\\r\\n\\t<mat-card-content>\\r\\n\\t\\tThis site is a project of the Complexity association.\\r\\n\\t\\t<br> Check out a different Site which does not yet exist for more information.\\r\\n\\t</mat-card-content>\\r\\n</mat-card>\\r\\n<div *ngIf=\\\"!authService.loggedIn()\\\">\\r\\n\\t<button mat-button routerLink=\\\"login\\\">Login</button>\\r\\n\\t<button mat-button routerLink=\\\"register\\\"> Register</button>\\r\\n</div>\\r\\n<div *ngIf=\\\"authService.loggedIn()\\\">\\r\\n\\t<button mat-button routerLink=\\\"../viewer\\\">viewer</button>\\r\\n\\t<button mat-button (click)=\\\"onLogoutClick()\\\">Logout</button>\\r\\n</div>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common'\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { InternalService } from '../../services/internal.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HomeComponent implements OnInit {\r\n \r\n constructor(private router: Router,\r\nprivate authService: AuthService,\r\nprivate internalService: InternalService) {}\r\n\r\n onLogoutClick() {\r\n  this.authService.logout(); // Logout user\r\n  this.router.navigate(['/']); // Navigate back to home page\r\n  this.internalService.loadUser();\r\n}\r\n  ngOnInit() {\r\n   \t\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Login Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n\\r\\n  <!-- Username Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Field  -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Submit Button -->\\r\\n  <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\nimport { InternalService } from '../../services/internal.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form;\r\n  previousUrl;\r\n \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private authGuard: AuthGuard,\r\n    private internalService: InternalService    \r\n  ) {\r\n    this.createForm(); // Create Login Form when component is constructed\r\n  }\r\n\r\n  // Function to create login form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  // Function to disable form\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n\r\n  // Function to enable form\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe(data => {\r\n      // Check if response was a success or error\r\n      if (!data['success']) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data['message']; // Set error message\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        this.message = data['message']; // Set success message\r\n       this.authService.storeUserData(data['token'], data['user'])\r\n        // After 2 seconds, redirect to dashboard page\r\n        setTimeout(() => {\r\n          // Check if user was redirected or logging in for first time\r\n          if (this.previousUrl) {\r\n            this.router.navigate([this.previousUrl]); // Redirect to page they were trying to view before\r\n          } else {\r\n            this.router.navigate(['viewer']); // Navigate to dashboard view\r\n          }\r\n          this.internalService.loadUser();\r\n        }, 500);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // On page load, check if user was redirected to login\r\n    if (this.authGuard.redirectUrl) {\r\n      this.messageClass = 'alert alert-danger'; // Set error message: need to login\r\n      this.message = 'You must be logged in to view that page.'; // Set message\r\n      this.previousUrl = this.authGuard.redirectUrl; // Set the previous URL user was redirected from\r\n      this.authGuard.redirectUrl = undefined; // Erase previous URL\r\n    }\r\n  }\r\n}","module.exports = \"#navbar {\\r\\n  width: 100%;\\r\\n  height: 410px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"navbar\\\"></div>\\r\\n\\r\\n    \"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Thought } from '../../models/thought';\r\nimport { DataSet, Network } from 'vis';\r\nimport { InternalService } from '../../services/internal.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { User } from '../../models/user';\r\nimport { PubRoom } from '../../models/pubRoom';\r\nimport { DataService } from '../../services/data.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  selectedThought: Thought;\r\n  selectedRoom: PubRoom;\r\n  lastRoom: PubRoom;\r\n  selectedNode: Thought;\r\n  private: any[];\r\n  public: any[];\r\n  rooms: any[];\r\n  friends: any[];\r\n  user: User;\r\n  nodes = new DataSet([\r\n  ]);\r\n  edges = new DataSet([\r\n  ]);\r\n  network;\r\n  goId;\r\n  lastId;\r\n  showUserContent = false;\r\n  showMyNetworks = false;\r\n  showMyRooms = false;\r\n  showMyFriends = false;\r\n  showThoughts: Thought[] = [];\r\n\r\n  data = {\r\n    nodes: this.nodes,\r\n    edges: this.edges\r\n  };\r\n  options = {\r\n    nodes: {\r\n      shape: 'dot',\r\n      size: 15,\r\n      font: {\r\n        size: 32,\r\n        color: '#111111'\r\n      },\r\n      borderWidth: 2,\r\n      shadow: true,\r\n    },\r\n    layout: {\r\n      hierarchical: {\r\n        sortMethod: 'directed'\r\n      }\r\n\r\n    },\r\n    groups: {  //0 = InfinityCloud, 1 = Other Rooms, 2 = selected Room, 3 = User, 4 = Private, 5 = Public, 6 = Rooms, 7 = Friends, 8 = SelectedRoom.Contents\r\n      0: {\r\n        size: 40,\r\n        color: '#A59BB2',\r\n        font: { size: 16, strokeWidth: 3, strokeColor: 'white' },\r\n      },\r\n      1: {\r\n        size: 30,\r\n        color: '#84729C',\r\n        font: { size: 22, strokeWidth: 3, strokeColor: 'white' }\r\n      },\r\n      2: {\r\n        color: '#55558E',\r\n        size: 15,\r\n        font: { size: 18, strokeWidth: 3, strokeColor: 'white' }\r\n      },\r\n\r\n      3: {\r\n        color: '#4C2C76',\r\n        size: 15,\r\n        font: { size: 14, strokeWidth: 3, strokeColor: 'white' }\r\n      },\r\n      4: {\r\n        color: '#361265',\r\n        size: 15,\r\n        font: { size: 12, strokeWidth: 3, strokeColor: 'white' }\r\n      },\r\n      5: {\r\n        color: '#361265',\r\n        size: 15,\r\n        font: { size: 12, strokeWidth: 3, strokeColor: 'white' }\r\n      },\r\n      6: {\r\n        color: '#361265',\r\n        size: 15,\r\n        font: { size: 12, strokeWidth: 3, strokeColor: 'white' }\r\n      },\r\n    },\r\n    edges: {\r\n      width: 2\r\n    }\r\n  };\r\n  constructor(public internalService: InternalService, private authService: AuthService, private dataService: DataService) { }\r\n\r\n  showContentNodes(id) {\r\n    this.dataService.getContent(id).subscribe(data => { console.log(data); })\r\n  }\r\n\r\n  onRoomChange(room: PubRoom) {\r\n    if (this.lastRoom) {\r\n      if (this.lastRoom != room) {\r\n        this.removeRoomNode(room)\r\n        this.drawRoomNode(room)\r\n      }\r\n    } else { //First time\r\n      this.drawRoomNode(room)\r\n    }\r\n    this.lastRoom = room;\r\n  }\r\n\r\n  onUserChange(user: User) {\r\n    if (this.user) {                                                                      //If its not the first Time a User is set\r\n      if (user._id != this.user._id) {                                                    //and as long as it isnt the same as the last User\r\n        this.removeUserNodes(user);\r\n        this.drawUserNodes(user);\r\n      }\r\n    } else {\r\n      this.user = user;                                                                 // First User (=Guest)\r\n      this.nodes.add({ id: \"3\", label: this.user.username, group: 2 })        // Add Guest Node\r\n    }\r\n  }\r\n  onThoughtChange(thought: Thought) {\r\n    if (this.selectedThought) {\r\n\r\n    } else { //First time\r\n    }\r\n    this.selectedThought = thought;\r\n  }\r\n\r\n\r\n  onNodeChange(node: Thought) { }\r\n\r\n\r\n\r\n\r\n\r\n  //Drawing Functions\r\n\r\n  drawRoomNode(room) {\r\n    this.selectedRoom = room;\r\n    this.nodes.add({ id: this.selectedRoom._id, label: this.selectedRoom.label, group: 1 }) // Add newRoom Node¨\r\n    this.edges.add({ from: 1, to: this.selectedRoom._id, id: \"3l\" })\r\n    this.edges.add({ from: this.selectedRoom._id, to: this.user._id, id: \"2l\" })\r\n  }\r\n\r\n  removeRoomNode(room) {\r\n    if (room._id != this.lastRoom._id) {\r\n      this.nodes.remove(this.lastRoom._id);\r\n      this.edges.remove(\"3l\");\r\n      this.edges.remove(\"2l\");\r\n    }\r\n  }\r\n\r\n  drawUserNodes(user) {\r\n    //Remove the Edge from Room to Guest/User\r\n    this.user = user;\r\n    this.nodes.add({ id: this.user._id, label: this.user.username, group: 2 })          //Add User Node\r\n    this.edges.add({ from: this.selectedRoom._id, to: this.user._id, id: \"2l\" })        //Add Edge from Room to User\r\n  }\r\n  removeUserNodes(user) {\r\n    if (this.nodes.get(\"3\")) this.nodes.remove(\"3\");                                 //Remove the Guest UserNode, if found\r\n    if (this.nodes.get(user._id)) this.nodes.remove(user._id);                       //Remove other UserNode, if found\r\n    this.edges.remove(\"2l\")                                                         //Remove Edge from Room to User\r\n  }\r\n  drawUserContent() {\r\n    this.showUserContent = true;\r\n    this.nodes.add({ id: 4, label: \"My Networks\", group: 3, first: true })              //Add Networks Node\r\n    this.edges.add({ from: this.user._id, to: 4, id: \"4l\" })                            //Add Edge from User to Networks\r\n    this.nodes.add({ id: 5, label: \"My Rooms\", group: 4, first: true })                 //Add Rooms Node\r\n    this.edges.add({ from: this.user._id, to: 5, id: \"5l\" })                            //Add Edge from User to Rooms\r\n    this.nodes.add({ id: 6, label: \"My Friends\", group: 5, first: true })                  //Add Friends Node\r\n    this.edges.add({ from: this.user._id, to: 6, id: \"6l\" })                            //Add Edge from User to Friends\r\n  }\r\n  removeUserContent() {\r\n    this.nodes.remove(4)                                //Remove Networks Node\r\n    this.edges.remove(\"4l\")                            //Remove Edge from User to Networks\r\n    this.nodes.remove(5)                                //Remove Rooms Node\r\n    this.edges.remove(\"5l\")                            //Remove Edge from User to Rooms\r\n    this.nodes.remove(6)                                //Remove Friends Node\r\n    this.edges.remove(\"6l\")                             //Remove Edge from User to Friends\r\n  }\r\n  drawMyNetworks() {\r\n    this.user.private.forEach(network => {\r\n      var i = 0;\r\n      this.nodes.add({ id: network._id, label: network.label, group: 4 });               //Add Networks Nodes\r\n      this.edges.add({ from: 4, to: network._id, id: \"networks\" + i });\r\n    })\r\n  }\r\n  removeMyNetworks() {\r\n    this.user.private.forEach(network => {\r\n      var i = 0;\r\n      this.nodes.remove(network._id);               //Add Networks Nodes\r\n      this.edges.remove(\"networks\" + i);\r\n    })\r\n  }\r\n  drawPublic() {\r\n\r\n  }\r\n  drawMyRooms() {\r\n    this.user.rooms.forEach(room => {                                                   //For Each of the Rooms\r\n      room._id = room._id + \"-Link\";\r\n      var i = 0;                                      //If Room isnt selected Room\r\n      this.nodes.add({ id: room._id, label: room.label, group: 4 })                     //Add Room \r\n      this.edges.add({ from: 5, to: room._id, id: \"rooms\" + i })                                        //Add Edge from MyRooms to Room \r\n\r\n    })\r\n  }\r\n  removeMyRooms() {\r\n    this.user.rooms.forEach(room => {                                                   //For Each of the Rooms\r\n      room._id = room._id + \"-Link\";\r\n      var i = 0;                                      //If Room isnt selected Room\r\n      this.nodes.remove(room._id)                     //Add Room \r\n      this.edges.remove(\"rooms\" + i)                                        //Add Edge from MyRooms to Room \r\n\r\n    })\r\n  }\r\n  drawMyFriends() {\r\n    this.user.friends.forEach(friend => {                                              //Add all Friends as Nodes\r\n      var i = 0;                                      //If Room isnt selected Room\r\n      this.nodes.add({ id: friend._id, label: friend.label, group: 5 })                     //Add Room \r\n      this.edges.add({ from: 6, to: friend._id, id: \"friend\" + i })                                        //Add Edge from MyRooms to Room \r\n    })\r\n  }\r\n  removeMyFriends() {\r\n    this.user.friends.forEach(friend => {\r\n      var i = 0;                                                      //Add all Friends as Nodes\r\n      this.nodes.remove(friend._id)\r\n      this.edges.remove(\"friend\" + i)\r\n    })\r\n  }\r\n\r\n  drawThoughtContent(id) {\r\n    this.dataService.getContent(id).subscribe(data => {\r\n      this.showThoughts.push(data['thought']);\r\n      if(data['thought'].contents.length) {\r\n      data['thought'].contents.forEach(content => {\r\n        var i = 0;\r\n        this.nodes.add({ id: content._id, label: content.label, group: 8 }) // Add newRoom Node¨\r\n        this.edges.add({ from: data['thought']._id, to: content._id, id: content._id + \"\" + i })   \r\n      });\r\n    }\r\n    })\r\n  }\r\n  removeThoughtContent(thought) { \r\n    thought.contents.forEach(content => {\r\n      var i = 0;\r\n      this.nodes.remove(content._id)\r\n      this.edges.remove(content._id + \"\" + i )\r\n      \r\n    });\r\n    //Delete from Array (That's the easiest way??)\r\n    this.showThoughts.forEach(showThought => {\r\n      var i = 0;\r\n      if (showThought._id === thought._id) {\r\n        this.showThoughts.splice(i, 1);\r\n        \r\n    }\r\n    i++;\r\n    })\r\n    \r\n    console.log(this.showThoughts)\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    //load User on Init if LoggedIn\r\n    if (this.authService.loggedIn()) {\r\n      this.internalService.loadUser();\r\n    }\r\n    //Groups: 0 = InfCloud, 1 = selRoom, 1a = selRoom Content, 2 = User, 3 = networks, 3a = networks content, 4 = rooms, 5 = friends \r\n    //Static IDs: \r\n    // Nodes: 1 = InfCl, 2 = Welcome, 3 = Guest, 4 = Networks, 5 = Rooms, 6 = Friends\r\n    // Edges: 1l = InfCl-Room, 2l = Room-User, \r\n\r\n    //Create Infinity-Cloud Node\r\n    this.nodes.add({ id: 1, label: \"Infinity Cloud\", group: 0 })                        //Add Infinity Cloud Node\r\n    //Subscribe to selected User, Room, Thought and NOdes \r\n    this.internalService.selectedUserObs.subscribe(user => this.onUserChange(user));    //Subscribe to User, on UserChange\r\n    this.internalService.selectedRoomObs.subscribe(room => { if (this.user) { this.onRoomChange(room) } });    //Subscribe to selected Room, onRoomChange\r\n    this.internalService.selectedThoughtObs.subscribe(thought => { if (this.selectedRoom) { this.onThoughtChange(thought) } });    //Subscribe to selected Room, onRoomChange\r\n    this.internalService.selectedNodeObs.subscribe(node => { if (this.user) { this.onNodeChange(node) } });    //Subscribe to selected Room, onRoomChange\r\n    //Later: Subscribe to trending/close by public Rooms\r\n\r\n    var container = document.getElementById('navbar');\r\n    this.network = new Network(container, this.data, this.options);\r\n\r\n    //0 = InfinityCloud, 1 = Other Rooms, 2 = selected Room, 3 = User + UserDimensions, 4 = networks, 5 = public, 6 = Rooms, 7 = Friends, 8 = SelectedRoom.Contents\r\n    //this.network.on(\"click\", params => {\r\n    //console.log(params);\r\n    // this.showContentNodes(this.nodes.get(params.nodes[0]));\r\n    //});\r\n\r\n    this.network.on('click', params => {\r\n      const selectedNode = this.nodes.get(params.nodes[0])\r\n      if (selectedNode['id'] == this.user._id) {  // If clickOn User: Draw/Remove User Content\r\n        if (this.showUserContent) {\r\n          this.removeUserContent();\r\n          this.showUserContent = false;\r\n        } else {\r\n          this.drawUserContent();\r\n          this.showUserContent = true;\r\n        }\r\n      } else if (selectedNode['id'] == 4) { // If clickOn Networks: Draw/Remove My Networks\r\n        if (this.showMyNetworks) {\r\n          this.removeMyNetworks();\r\n          this.showMyNetworks = false;\r\n        } else {\r\n          this.drawMyNetworks();\r\n          this.showMyNetworks = true;\r\n        }\r\n      } else if (selectedNode['id'] == 5) {\r\n        if (this.showMyRooms) {\r\n          this.removeMyRooms();\r\n          this.showMyRooms = false;\r\n        } else {\r\n          this.drawMyRooms();\r\n          this.showMyRooms = true;\r\n        }\r\n      } else if (selectedNode['id'] == 6) {\r\n        if (this.showMyFriends) {\r\n          this.removeMyFriends();\r\n          this.showMyFriends = false;\r\n        } else {\r\n          this.drawMyFriends();\r\n          this.showMyFriends = true;\r\n        }\r\n      } else {\r\n        if(this.showThoughts.length > 0){\r\n        const selectedThought = this.showThoughts.filter(thought => thought._id == selectedNode['id'])\r\n        if (selectedThought.length > 0) {\r\n          this.removeThoughtContent(selectedThought[0]);\r\n        } else {\r\n          this.drawThoughtContent(selectedNode['id']);\r\n        }\r\n      } else {\r\n        this.drawThoughtContent(selectedNode['id']);\r\n      }\r\n\r\n      }\r\n\r\n    })\r\n    this.network.on('doubleClick', params => {\r\n      const selectedNode = this.nodes.get(params.nodes[0])\r\n      if (selectedNode['group'] = 4) {\r\n        console.log(\"you dblClicked a Room!\")\r\n      } else if (selectedNode['group'] = 5) {\r\n        console.log(\"you dblClicked Friends!\")\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Profile Page</h2>\\r\\n<ul class=\\\"list-group\\\">\\r\\n\\t<li class=\\\"list-group-item\\\">Username: {{ username }}</li>\\r\\n\\t<li class=\\\"list-group-item\\\">Email: {{ email }} </li>\\r\\n\\t\\r\\n\\t</ul>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\r\n  username = '';\r\n  email = '';\r\n\r\n\r\n  constructor(\r\n  \tprivate authService: AuthService\r\n  \t) { }\r\n\r\n    ngOnInit() {\r\n    // Once component loads, get user's data to display on profile\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile['user'].username; // Set username\r\n      this.email = profile['user'].email; // Set e-mail\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    Welcome to the infinity Cloud...\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper=\\\"matHorizontalStepper\\\">\\r\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n        <form [formGroup]=\\\"firstFormGroup\\\" (ngSubmit)=\\\"onRegisterSubmit()\\\">\\r\\n          <ng-template matStepLabel>Create a User</ng-template>\\r\\n          <mat-form-field [ngClass]=\\\"{'has-error': (firstFormGroup.controls.username.errors && firstFormGroup.controls.username.dirty) || (!usernameValid && firstFormGroup.controls.username.dirty), 'has-success': !firstFormGroup.controls.username.errors && usernameValid}\\\">\\r\\n            <input matInput placeholder=\\\"Username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\" required>\\r\\n          </mat-form-field>\\r\\n          <!-- Add Visualisation of User and Colorchooser Later -->\\r\\n          <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"firstFormGroup.controls.username.errors?.required && firstFormGroup.controls.username.dirty\\\">This field is required</li>\\r\\n            <li *ngIf=\\\"firstFormGroup.controls.username.errors?.minlength && firstFormGroup.controls.username.dirty || firstFormGroup.controls.username.errors?.maxlength && firstFormGroup.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</li>\\r\\n            <li *ngIf=\\\"firstFormGroup.controls.username.errors?.validateUsername && firstFormGroup.controls.username.dirty\\\">Username must not have any special characters</li>\\r\\n            <li *ngIf=\\\"usernameMessage\\\">{{ usernameMessage }}</li>\\r\\n          </ul>\\r\\n\\r\\n          <mat-form-field [ngClass]=\\\"{'has-error': (firstFormGroup.controls.email.errors && firstFormGroup.controls.email.dirty) || (!emailValid && firstFormGroup.controls.email.dirty), 'has-success': !firstFormGroup.controls.email.errors && emailValid}\\\">\\r\\n            <input matInput placeholder=\\\"E-Mail\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\"\\r\\n              required>\\r\\n          </mat-form-field>\\r\\n          <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"firstFormGroup.controls.email.errors?.required && firstFormGroup.controls.email.dirty\\\">This field is required</li>\\r\\n            <li *ngIf=\\\"(firstFormGroup.controls.email.errors?.minlength && firstFormGroup.controls.email.dirty || firstFormGroup.controls.email.errors?.maxlength && firstFormGroup.controls.email.dirty ) && firstFormGroup.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\r\\n            <li *ngIf=\\\"firstFormGroup.controls.email.errors?.validateEmail && firstFormGroup.controls.email.dirty\\\">This must be a valid e-mail</li>\\r\\n            <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\r\\n          </ul>\\r\\n          <mat-form-field [ngClass]=\\\"{'has-error': (firstFormGroup.controls.password.errors && firstFormGroup.controls.password.dirty), 'has-success': !firstFormGroup.controls.password.errors}\\\">\\r\\n            <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" required>\\r\\n          </mat-form-field>\\r\\n          <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"firstFormGroup.controls.password.errors?.required && firstFormGroup.controls.password.dirty\\\">This field is required</li>\\r\\n          </ul>\\r\\n          <mat-form-field [ngClass]=\\\"{'has-error': (firstFormGroup.controls.confirm.errors && firstFormGroup.controls.confirm.dirty) || (firstFormGroup.errors?.matchingPasswords && firstFormGroup.controls.confirm.dirty), 'has-success': !firstFormGroup.controls.confirm.errors && !firstFormGroup.errors?.matchingPasswords}\\\">\\r\\n            <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirm\\\" required>\\r\\n          </mat-form-field>\\r\\n          <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"firstFormGroup.controls.confirm.errors?.required && firstFormGroup.controls.confirm.dirty\\\">This field is required</li>\\r\\n            <li *ngIf=\\\"firstFormGroup.errors?.matchingPasswords && firstFormGroup.controls.confirm.dirty\\\">Password do not match</li>\\r\\n          </ul>\\r\\n          <div>\\r\\n            <br>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext type=\\\"submit\\\" value=\\\"Submit\\\">Create a User</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n        <form [formGroup]=\\\"secondFormGroup\\\" (ngSubmit)=\\\"onNetworkSubmit()\\\">\\r\\n          <ng-template matStepLabel>Rooms</ng-template>\\r\\n          <p>Now that you are a user, the complexity-App created your own Space in the infinity Cloud.</p>\\r\\n          <br><p>By default, this space is open for everyone, so other Users can enter your Room and see its content.</p>\\r\\n          <p>You can create multiple public Rooms and become a Member of certain ones.</p>\\r\\n          <br><p>Most of your Thoughts thought are going to be thought inside of your user.</p>\\r\\n          <p>Every user is capable of storing multiple Networks!</p>\\r\\n          <br><p>Let's create your first Network!</p>\\r\\n          \\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Create your first Network\\\" formControlName=\\\"network\\\" required>\\r\\n          </mat-form-field>\\r\\n          <div>\\r\\n            <br>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext type=\\\"submit\\\" value=\\\"Submit\\\">Create a Network!</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\r\\n        <form [formGroup]=\\\"thirdFormGroup\\\" (ngSubmit)=\\\"onStarterNetworkSubmit()\\\">\\r\\n          <ng-template matStepLabel>Starter Set</ng-template>\\r\\n            <p>We recommend you to start with an exmaple Network. It will show you the potential of the complexity-app!</p>\\r\\n            <br><p>You can also start on a blank Node (for experienced Users, not yet implemented)</p>\\r\\n            <p>The starter Set contains the following Nodes.</p>\\r\\n          <mat-list>\\r\\n            <mat-list-item>\\r\\n              <button mat-button color=\\\"primary\\\">Diary</button>\\r\\n              <p>Write down your Memories and Feelings as complex networks. It Includes a timeline and specific feelings.</p>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item>\\r\\n              <button mat-button color=\\\"primary\\\">Plans</button>\\r\\n              <button mat-button>Create complex Projects and set Goals within your Timelines</button>\\r\\n            </mat-list-item>\\r\\n          </mat-list>\\r\\n          <div>\\r\\n            <br>\\r\\n            <br>\\r\\n            <button mat-raised-button matStepperNext color=\\\"primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\">Get started!</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n    </mat-horizontal-stepper>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../../services/data.service';\r\nimport { Thought } from '../../models/thought';\r\nimport { InternalService } from '../../services/internal.service';\r\nimport { PubRoom } from '../../models/pubRoom';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form;\r\n  message;\r\n  messageClass;\r\n  processing = false;\r\n  emailValid;\r\n  emailMessage;\r\n  usernameValid;\r\n  usernameMessage;\r\n  userId;\r\n  startNetwork: Thought;\r\n  plans :Thought;\r\n  diary: Thought;\r\n\r\n\r\n  projectsId;\r\n  sessionsId;\r\n  favoritesId;\r\n  todoId;\r\n  startId: string;\r\n  userData;\r\n  timeline; goals; projects;\r\n  today; week; month; year; life;\r\n  memory; feeling; all;\r\n  infcl; publ; rooms; ptho;\r\n  dauser;\r\n  privateArray: any[];\r\n  privateObj;\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n  userRoom: PubRoom;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private dataService: DataService,\r\n    private router: Router,\r\n    private internalService: InternalService\r\n  ) {\r\n  }\r\n\r\n  // Function to create registration form\r\n\r\n\r\n  // Function to disable the registration form\r\n  disableForm() {\r\n    this.firstFormGroup.controls['email'].disable();\r\n    this.firstFormGroup.controls['username'].disable();\r\n    this.firstFormGroup.controls['password'].disable();\r\n    this.firstFormGroup.controls['confirm'].disable();\r\n  }\r\n\r\n  // Function to enable the registration form\r\n  enableForm() {\r\n    this.firstFormGroup.controls['email'].enable();\r\n    this.firstFormGroup.controls['username'].enable();\r\n    this.firstFormGroup.controls['password'].enable();\r\n    this.firstFormGroup.controls['confirm'].enable();\r\n  }\r\n\r\n  // Function to validate e-mail is proper format\r\n  validateEmail(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    // Test email against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid email\r\n    } else {\r\n      return { 'validateEmail': true } // Return as invalid email\r\n    }\r\n  }\r\n\r\n  // Function to validate username is proper format\r\n  validateUsername(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\r\n    // Test username against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid username\r\n    } else {\r\n      return { 'validateUsername': true } // Return as invalid username\r\n    }\r\n  }\r\n\r\n  // Function to validate password\r\n  validatePassword(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\r\n    // Test password against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid password\r\n    } else {\r\n      return { 'validatePassword': true } // Return as invalid password\r\n    }\r\n  }\r\n\r\n  // Funciton to ensure passwords match\r\n  matchingPasswords(password, confirm) {\r\n    return (group: FormGroup) => {\r\n      // Check if both fields are the same\r\n      if (group.controls[password].value === group.controls[confirm].value) {\r\n        return null; // Return as a match\r\n      } else {\r\n        return { 'matchingPasswords': true } // Return as error: do not match\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to submit form\r\n  onRegisterSubmit() {\r\n    this.processing = true;\r\n    this.disableForm();\r\n\r\n    //Create Starter Object\r\n\r\n    // Create user object form user's inputs\r\n    const user = {\r\n      email: this.firstFormGroup.get('email').value, // E-mail input field\r\n      username: this.firstFormGroup.get('username').value, // Username input field\r\n      password: this.firstFormGroup.get('password').value // Password input field\r\n    }\r\n\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      if (!data['success']) {\r\n        this.messageClass = 'alert alert-danger';\r\n        this.message = data['message'];\r\n        this.processing = false;\r\n        this.enableForm();\r\n      } else {\r\n        this.messageClass = 'alert alert-success';\r\n        this.message = data['message'];\r\n        this.userId = data['user']._id;\r\n\r\n        //Login User \r\n        const user = {\r\n          username: this.firstFormGroup.get('username').value, // Username input field\r\n          password: this.firstFormGroup.get('password').value // Password input field\r\n        }\r\n\r\n        // Function to send login data to API\r\n        this.authService.login(user).subscribe(data => {\r\n          this.authService.storeUserData(data['token'], data['user'])\r\n\r\n\r\n\r\n          //Create UserRoom\r\n          this.userRoom = {\r\n            label: this.firstFormGroup.get('username').value + \"'s-Room\",\r\n            admin: [this.userId],\r\n            members: [],\r\n            contents: [],\r\n            dimensions: [{ label: \"Creation Time\", dimtype: \"Date\", val: Date.now.toString() }],\r\n            activeUsers: [this.userId],\r\n            visible: \"open\"\r\n          }\r\n\r\n          console.log(this.userRoom)\r\n          this.dataService.newPubRoom(this.userRoom).subscribe(data => {\r\n            this.userRoom = data['pubRoom'];\r\n            console.log(this.userRoom)\r\n            console.log(data);\r\n\r\n\r\n\r\n            //add Public Room to Users Rooms\r\n            const editUser = {\r\n              _id: this.userId,\r\n              rooms: [this.userRoom._id]\r\n            };\r\n            this.authService.editUser(editUser).subscribe(data => {\r\n\r\n\r\n              //Load User and change Room\r\n              this.internalService.loadUser();\r\n            })\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onNetworkSubmit() {\r\n    const network: Thought = {  // rename as \"User/Username or Persona\"\r\n      label: this.secondFormGroup.get('network').value,\r\n      level: 0,\r\n      color: \"#FFFFFF\",\r\n      clicks: 0,\r\n      showAs: \"grid\",\r\n      user: this.userId,\r\n      contexts: [],\r\n      contents: [],\r\n      dimensions: [],\r\n      texture: \"\",\r\n      form: \"circle\",\r\n      privacy: \"private\",\r\n      grid: { colspan: 1, rowspan: 1, x: 1, y: 1, rows: 1, cols: 1 }\r\n    };\r\n\r\n\r\n    this.dataService.newThought(network).subscribe(data => {\r\n      this.startNetwork = data['thought'];\r\n      const editUser = {\r\n        _id: this.userId,\r\n        private: [this.startNetwork._id]\r\n      };\r\n      this.authService.editUser(editUser).subscribe(data => {\r\n           //Load User and change Room\r\n           this.internalService.loadUser();\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  onStarterNetworkSubmit() {\r\n    const diary: Thought = { \r\n      label: \"Diary\",\r\n      level: 1,\r\n      color: \"#ccffcc\",\r\n      clicks: 0,\r\n      showAs: \"grid\",\r\n      user: this.userId,\r\n      contexts: [this.startNetwork._id],\r\n      contents: [],\r\n      dimensions: [],\r\n      texture: \"\",\r\n      form: \"circle\",\r\n      privacy: \"private\",\r\n      grid: { colspan: 1, rowspan: 1, x: 1, y: 1, rows: 1, cols: 1 }\r\n    };\r\n\r\n    const plans: Thought = {\r\n      label: \"Plans\",\r\n      level: 1,\r\n      color: \"#99ccff\",\r\n      clicks: 0,\r\n      showAs: \"grid\",\r\n      user: this.userId,\r\n      contexts: [this.startNetwork._id],\r\n      contents: [],\r\n      dimensions: [],\r\n      texture: \"\",\r\n      form: \"circle\",\r\n      privacy: \"private\",\r\n      grid: { colspan: 1, rowspan: 1, x: 1, y: 1, rows: 1, cols: 1 }\r\n    };\r\n\r\n    this.dataService.newThought(diary).subscribe(data => {\r\n      this.diary = data['thought'];\r\n      this.dataService.newThought(plans).subscribe(data => {\r\n        this.plans = data['thought'];\r\n\r\n        const goals: Thought = {\r\n          label: \"Goals\",\r\n          level: 2,\r\n          color: \"#99ddff\",\r\n          clicks: 0,\r\n          showAs: \"grid\",\r\n          user: this.userId,\r\n          contexts: [this.plans._id, this.startNetwork._id],\r\n          contents: [],\r\n          dimensions: [],\r\n          texture: \"\",\r\n          form: \"circle\",\r\n          privacy: \"private\",\r\n          grid: { colspan: 1, rowspan: 1, x: 1, y: 1, rows: 1, cols: 1 }\r\n        };\r\n    \r\n        this.dataService.newThought(goals).subscribe(data => {\r\n          this.goals = data['thought'];\r\n\r\n                  const editPlans = {\r\n                    _id: this.plans._id,\r\n                    editContents: [this.goals._id]\r\n                  };\r\n                  this.dataService.editThought(editPlans).subscribe(data => {\r\n\r\n                    const editStartNetwork = {\r\n                      _id: this.startNetwork._id,\r\n                      editContents: [this.diary._id, this.plans._id]\r\n                    };\r\n                    this.dataService.editThought(editStartNetwork).subscribe(data => {\r\n  \r\n\r\n                        this.processing = true; // Lock form fields\t\r\n                        // Function to send blog object to backend\r\n\r\n                        // Check if PUT request was a success or not\r\n                        if (!data['success']) {\r\n                          this.messageClass = 'alert alert-danger'; // Set error bootstrap class\r\n                          this.message = data['message']; // Set error message\r\n                          this.processing = false; // Unlock form fields\r\n                        } else {\r\n                          this.messageClass = 'alert alert-success'; // Set success bootstrap class\r\n                          this.message = data['message']; // Set success message\r\n                          // After two seconds, navigate back to blog page \r\n                        }\r\n                      });\r\n                      });\r\n                    });\r\n                  });\r\n                });\r\n           \r\n    this.internalService.changeThought(this.startNetwork._id);\r\n    this.router.navigate(['/viewer/']); // Redirect to Persona\r\n  }\r\n  // Function to check if e-mail is taken\r\n  checkEmail() {\r\n    // Function from authentication file to check if e-mail is taken\r\n    this.authService.checkEmail(this.firstFormGroup.get('email').value).subscribe(data => {\r\n      // Check if success true or false was returned from API\r\n      if (!data['success']) {\r\n        this.emailValid = false; // Return email as invalid\r\n        this.emailMessage = data['message']; // Return error message\r\n      } else {\r\n        this.emailValid = true; // Return email as valid\r\n        this.emailMessage = data['message']; // Return success message\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to check if username is available\r\n  checkUsername() {\r\n    // Function from authentication file to check if username is taken\r\n    this.authService.checkUsername(this.firstFormGroup.get('username').value).subscribe(data => {\r\n      // Check if success true or success false was returned from API\r\n      if (!data['success']) {\r\n        this.usernameValid = false; // Return username as invalid\r\n        this.usernameMessage = data['message']; // Return error message\r\n      } else {\r\n        this.usernameValid = true; // Return username as valid\r\n        this.usernameMessage = data['message']; // Return success message\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this.formBuilder.group({\r\n      email: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(5), // Minimum length is 5 characters\r\n        Validators.maxLength(30), // Maximum length is 30 characters\r\n        this.validateEmail // Custom validation\r\n      ])],\r\n      // Username Input\r\n      username: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(3), // Minimum length is 3 characters\r\n        Validators.maxLength(15), // Maximum length is 15 characters\r\n        this.validateUsername // Custom validation\r\n      ])],\r\n      // Password Input\r\n      password: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n      ])],\r\n      // Confirm Password Input\r\n      confirm: ['', Validators.required] // Field is required\r\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\r\n\r\n    this.secondFormGroup = this.formBuilder.group({\r\n      network: ['', Validators.required]\r\n    });\r\n    this.thirdFormGroup = this.formBuilder.group({\r\n\r\n    });\r\n  }\r\n\r\n}","module.exports = \".spacer{\\r\\n    flex: 1 1 auto;\\r\\n   \\r\\n}\\r\\n\\r\\n\\r\\n.bot{\\r\\nwidth: 100%;\\r\\n}\"","module.exports = \"<div>\\r\\n \\r\\n    <mat-toolbar *ngIf=\\\"showTool == 'new'\\\">\\r\\n      <app-new></app-new>\\r\\n    </mat-toolbar>\\r\\n    <mat-toolbar *ngIf=\\\"showTool == 'copy'\\\">\\r\\n      <app-copy></app-copy>\\r\\n    </mat-toolbar>\\r\\n    <mat-toolbar *ngIf=\\\"showTool == 'link'\\\">\\r\\n      <app-link></app-link>\\r\\n    </mat-toolbar>\\r\\n    <mat-toolbar *ngIf=\\\"showTool == 'edit'\\\">\\r\\n      <app-edit></app-edit>\\r\\n    </mat-toolbar>\\r\\n    <mat-toolbar *ngIf=\\\"showTool == 'delete'\\\">\\r\\n      <app-delete></app-delete>\\r\\n    </mat-toolbar>\\r\\n    <mat-toolbar *ngIf=\\\"showTool == 'search'\\\">\\r\\n      <app-search></app-search>\\r\\n    </mat-toolbar>\\r\\n    <mat-toolbar *ngIf=\\\"showTool == 'dimension'\\\">\\r\\n      <app-dimension></app-dimension>\\r\\n    </mat-toolbar>\\r\\n \\r\\n  <mat-toolbar>\\r\\n    <mat-toolbar-row *ngIf=\\\"selectedThought\\\">\\r\\n\\r\\n\\r\\n      <span class='spacer'></span>\\r\\n      <button mat-button matTooltip=\\\"Add\\\"  *ngIf=\\\"selectedThought.level > 2\\\" (click)=\\\"changeTool('dimension')\\\">\\r\\n        <i class=\\\"material-icons\\\">add</i> Add</button>\\r\\n      <button mat-button matTooltip=\\\"New\\\" *ngIf=\\\"selectedThought.level > 1\\\" (click)=\\\"changeTool('new')\\\">\\r\\n        <i class=\\\"material-icons\\\">add_circle</i> New</button>\\r\\n      <button mat-button matTooltip=\\\"Copy\\\" *ngIf=\\\"selectedThought.level > 2\\\" (click)=\\\"changeTool('copy')\\\">\\r\\n        <i class=\\\"material-icons\\\">add_box</i> Copy</button>\\r\\n      <button mat-button matTooltip=\\\"Link\\\" *ngIf=\\\"selectedThought.level > 2\\\" (click)=\\\"changeTool('link')\\\">\\r\\n        <i class=\\\"material-icons\\\">link</i> Link</button>\\r\\n      <button mat-button matTooltip=\\\"Edit\\\" *ngIf=\\\"selectedThought.level > 2\\\" (click)=\\\"changeTool('edit')\\\">\\r\\n        <i class=\\\"material-icons\\\">create</i> Edit</button>\\r\\n        <button mat-button matTooltip=\\\"Edit\\\" *ngIf=\\\"selectedThought.level > 2\\\" [matMenuTriggerFor]=\\\"views\\\">\\r\\n            <i class=\\\"material-icons\\\">view_quilt</i> Change View</button>\\r\\n      <button mat-button matTooltip=\\\"Delete\\\" *ngIf=\\\"selectedThought.level > 2\\\" (click)=\\\"changeTool('delete')\\\">\\r\\n        <i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\r\\n      <button mat-button matTooltip=\\\"Search\\\" *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"changeTool('search')\\\">\\r\\n        <i class=\\\"material-icons\\\">search</i> Search</button>\\r\\n      <button mat-button matTooltip=\\\"{{ user.username | uppercase}}\\\" *ngIf=\\\"authService.loggedIn()\\\" [matMenuTriggerFor]=\\\"menu\\\">\\r\\n        <i class=\\\"material-icons\\\">account_circle</i> {{ user.username | uppercase}}</button>\\r\\n\\r\\n\\r\\n        <mat-menu #views=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n            <button mat-menu-item (click)=\\\"changeView('timeline')\\\">Timeline</button>\\r\\n            <button mat-menu-item (click)=\\\"changeView('graph')\\\">Graph</button>\\r\\n            <button mat-menu-item (click)=\\\"changeView('grid')\\\">Network</button>\\r\\n          \\r\\n          </mat-menu>\\r\\n      <mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n        <!-- If LoggedIn -->\\r\\n        <button mat-menu-item routerLink=\\\"../../profile\\\">Profile</button>\\r\\n        <button mat-menu-item (click)=\\\"onLogoutClick()\\\">Logout</button>\\r\\n      </mat-menu>\\r\\n      <span class='spacer'></span>\\r\\n      <button mat-button>Complexity-App v.0.0.6</button>\\r\\n    </mat-toolbar-row>\\r\\n  </mat-toolbar>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Thought } from '../../models/thought';\r\nimport { InternalService } from '../../services/internal.service';\r\nimport { User } from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  username; userId; starterId;\r\n  selectedThought: Thought;\r\n  user: User;\r\n  //Tools\r\n  showTool: String;\r\n\r\n  constructor(private router: Router,\r\n    public authService: AuthService,\r\n    public internalService: InternalService) { }\r\n\r\n\r\n  changeTool(tool: String) {\r\n    if (this.showTool == tool) {\r\n      this.showTool = \"none\";\r\n    } else {\r\n      this.showTool = tool;\r\n    }\r\n    this.internalService.changeTool(this.showTool);\r\n  }\r\n\r\n  changeView(label: string){\r\n    this.internalService.changeShowAs(label);\r\n  }\r\n  onLogoutClick() {\r\n    this.authService.logout(); // Logout user\r\n    this.router.navigate(['/']); // Navigate back to home page\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.internalService.selectedUserObs.subscribe(res => this.user = res);\r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n    this.internalService.selectedToolObs.subscribe(res => this.showTool = res);\r\n  }\r\n\r\n}\r\n","module.exports = \".searchbar-fullwidth {\\r\\n    width: 100%;\\r\\n}\\r\\n.searchbar-form {\\r\\n    min-width: 600px;\\r\\n    max-width: 1000px;\\r\\n    width: 100%;\\r\\n  }\"","module.exports = \"<mat-toolbar-row *ngIf=\\\"selectedThought.level > 0\\\">\\r\\n\\r\\n  <form class=\\\"searchbar-form\\\">\\r\\n   \\r\\n    <mat-form-field class=\\\"searchbar-fullwidth\\\">\\r\\n      <input matInput placeholder=\\\"Copy\\\" aria-label=\\\"Thought\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"thoughtCtrl\\\">\\r\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n        <mat-option *ngFor=\\\"let thought of filteredThoughts | async\\\" [value]=\\\"thought.label\\\" (click)=\\\"copyThought(thought)\\\">\\r\\n          <span>{{ thought.label }}</span>\\r\\n          <small *ngFor=\\\"let context of thought.contexts\\\"> | {{ context.label }}</small>\\r\\n        </mat-option>\\r\\n      </mat-autocomplete>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n \\r\\n</mat-toolbar-row>\\r\\n\\r\\n<mat-toolbar-row *ngIf=\\\"selectedThought.level <= 0\\\">\\r\\n  You can't copy Thoughts on this level.\\r\\n</mat-toolbar-row>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Thought } from '../../../models/thought';\r\nimport { Dimension } from '../../../models/dimension';\r\nimport { FormControl, FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { InternalService } from '../../../services/internal.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { startWith ,  map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-copy',\r\n  templateUrl: './copy.component.html',\r\n  styleUrls: ['./copy.component.css']\r\n})\r\nexport class CopyComponent implements OnInit {\r\n  thoughts: Thought[];\r\n  selectedThought: Thought;\r\n  context: Thought;\r\n  contexts: Thought[];\r\n  lastInput: String;\r\n  dimensions: Dimension[];\r\n  newContexts: String[] = [];\r\n  newContents: String[] = [];\r\n  contextContent: String[] = [];\r\n  //Autocomplete\r\n  thoughtCtrl: FormControl;\r\n  newThought: FormControl;\r\n  filteredThoughts: Observable<Thought[]>;\r\n  private: any[];\r\n  username;\r\n  userId;\r\n  saveId;\r\n\r\n  constructor(private dataService: DataService,\r\n    private formBuilder: FormBuilder,\r\n    private internalService: InternalService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    //Autocomplete\r\n    this.thoughtCtrl = new FormControl();\r\n    this.newThought = new FormControl();\r\n    this.filteredThoughts = this.thoughtCtrl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(thought => thought ? this.filterThoughts(thought) : this.thoughts.slice())\r\n      );\r\n\r\n  }\r\n\r\n  filterThoughts(label: string) {\r\n    this.lastInput = label;\r\n    return this.thoughts.filter(thought =>\r\n      thought.label.toLowerCase().indexOf(label.toLowerCase()) === 0);\r\n  }\r\n\r\n  copyThought(thought) {\r\n\r\n    this.newContexts = [];  // Reset Context\r\n    this.dataService.getSingleThought(this.selectedThought._id).subscribe(data => { // Get Context of selected Thought\r\n      this.newContexts = data['thought'].contexts;                                     //Save Context of selected Thought\r\n      this.newContexts.unshift(this.selectedThought._id);                           //Add Selected Thought as Context\r\n      this.contextContent = data['thought'].contents;\r\n\r\n      //Resave Thought with New Context\r\n      const copyThought = {\r\n        label: thought.label,\r\n        level: this.selectedThought.level,\r\n        color: thought.color,\r\n        clicks: 0,\r\n        showAs: thought.showAs,\r\n        user: this.userId,\r\n        contexts: this.newContexts,\r\n        contents: thought.contents,\r\n        dimensions: this.dimensions,\r\n        texture: \"\",\r\n        form: \"circle\",\r\n        privacy: \"private\"\r\n      };\r\n\r\n      this.dataService.newThought(copyThought).subscribe(data => {\r\n        this.saveId = data['newId'];\r\n\r\n\r\n        this.contextContent.push(this.saveId);\r\n\r\n        const editThought = {\r\n          _id: this.selectedThought._id,\r\n          editContents: this.contextContent\r\n        };\r\n\r\n        this.dataService.editThought(editThought).subscribe(data => {\r\n\r\n\r\n          this.router.navigate(['/viewer/', this.selectedThought._id]);\r\n          this.internalService.changeThought(this.selectedThought._id);\r\n        });\r\n      });\r\n    });\r\n  }\r\n  ngOnInit() {\r\n\r\n    //GET USER Data\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile['user'].username; // Used when creating new blog posts and comments\r\n      this.userId = profile['user']._id;\r\n      this.private = profile['user'].private;\r\n    });\r\n\r\n\r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n \r\n\r\n  }\r\n}","module.exports = \".spacer{\\r\\n    flex: 1 1 auto;\\r\\n   \\r\\n}\"","module.exports = \"<div *ngIf=\\\"selectedThought.level <= 0\\\">\\r\\n    You can't delete Thoughts on this level.\\r\\n</div>\\r\\n  <div *ngIf=\\\"selectedThought.level > 0\\\">\\r\\n     Are you sure you want to delete \\\"{{selectedThought.label}}\\\"?\\\"\\r\\n     <button mat-button (click)=\\\"deleteThought(selectedThought._id)\\\">Yes</button><button mat-button>No</button>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { InternalService } from '../../../services/internal.service';\r\nimport { Thought } from '../../../models/thought';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.css']\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n  selectedThought: Thought;\r\n  constructor(private dataService: DataService,\r\n  private internalService: InternalService) { }\r\n\r\n  deleteThought(id) {\r\n    //Delete the Thought\r\n  \r\n    this.dataService.deleteThought(id).subscribe(data => {\r\n      this.internalService.changeThought(this.selectedThought.contexts.pop()._id);\r\n      this.internalService.changeTool(\"none\");\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n  }\r\n  \r\n   \r\n}\r\n","module.exports = \".searchbar-form {\\r\\n    min-width: 600px;\\r\\n    max-width: 1000px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  .searchbar-fullwidth {\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<mat-toolbar-row *ngIf=\\\"selectedThought.level > 0\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput #label [(ngModel)]=\\\"newLabel\\\" name=\\\"newLabel\\\" placeholder=\\\"Enter a Label\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n    <form>\\r\\n        <button mat-button [matMenuTriggerFor]=\\\"menuDimensions\\\">Choose Type of Dimension</button>\\r\\n        <mat-menu #menuDimensions=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n          <button mat-menu-item (click)=\\\"changeType('Date')\\\"><i class=\\\"material-icons\\\">event</i> Date</button>\\r\\n          <button mat-menu-item (click)=\\\"changeType('Number')\\\"><i class=\\\"material-icons\\\">timeline</i> Number</button>\\r\\n          <button mat-menu-item (click)=\\\"changeType('Tag')\\\"><i class=\\\"material-icons\\\">flag</i> Tag</button>\\r\\n        </mat-menu>\\r\\n   \\r\\n\\r\\n\\r\\n      <mat-form-field *ngIf=\\\"addDate\\\">\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"newDate\\\" name=\\\"newDate\\\" placeholder=\\\"Choose a date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field *ngIf=\\\"addNumber\\\">\\r\\n          <input matInput #number [(ngModel)]=\\\"newNumber\\\" name=\\\"newNumber\\\" placeholder=\\\"Enter a Number\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field *ngIf=\\\"addTag\\\">\\r\\n            <input matInput #tag [(ngModel)]=\\\"newTag\\\" name=\\\"newTag\\\" placeholder=\\\"Add a Tag\\\">\\r\\n          </mat-form-field>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n      <button mat-button (click)=\\\"onDimensionSubmit()\\\">Add a {{ selectedDimension.dimtype }} Dimension</button>\\r\\n  \\r\\n  \\r\\n    </form>\\r\\n  \\r\\n  \\r\\n  \\r\\n  </mat-toolbar-row>\\r\\n  \\r\\n  \\r\\n  <mat-toolbar-row *ngIf=\\\"selectedThought.level == 0 || selectedThought.level < -1\\\">\\r\\n    You can't Add Thoughts on this level.\\r\\n  </mat-toolbar-row>\\r\\n  \\r\\n  <mat-toolbar-row *ngIf=\\\"selectedThought.level == -1\\\">\\r\\n    Create new Persona: Public / Private\\r\\n  </mat-toolbar-row>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { InternalService } from '../../../services/internal.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Dimension } from '../../../models/dimension';\r\nimport { Observable } from 'rxjs';\r\nimport { Thought } from '../../../models/thought';\r\nimport { User } from '../../../models/user';\r\nimport { startWith ,  map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-dimension',\r\n  templateUrl: './dimension.component.html',\r\n  styleUrls: ['./dimension.component.css']\r\n})\r\nexport class DimensionComponent implements OnInit {\r\n  newDate;\r\n  saveId: any;\r\n  thoughts: Thought[];\r\n  selectedThought: Thought;\r\n  context: Thought;\r\n  contexts: Thought[];\r\n  lastInput: String;\r\n  dimensions: Dimension[];\r\n  userDimensions: Dimension[];\r\n  newContexts: String[] = [];\r\n  newContents: String[] = [];\r\n  contextContent: String[] = [];\r\n  //Autocomplete\r\n  thoughtCtrl: FormControl;\r\n  newThought: FormControl;\r\n  filteredThoughts: Observable<Thought[]>;\r\n  user: User;\r\n  messageClass;\r\n  message;\r\n  newCompApp;\r\n  addDimensions = false;\r\n  username;\r\n  userId;\r\n  unstructured;\r\n  showDiary = false;\r\n  showPlans = false;\r\n  memoriesId;\r\n  showCopyThought = false;\r\n  showNewThought = true;\r\n  showLinkThought = false;\r\n  private: any[];\r\n  selectedDimension: Dimension;\r\n  addNumber = false;\r\n  addDate = false;\r\n  addTag = false;\r\n  newDimension: Dimension;\r\n  newNumber;\r\n  newTag;\r\n  newLabel;\r\n  addDimension = false;\r\n\r\n  constructor(private dataService: DataService,\r\n    private formBuilder: FormBuilder,\r\n    private internalService: InternalService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    //Autocomplete\r\n    this.newThought = new FormControl();\r\n  }\r\n\r\n\r\n  onDimensionSubmit() {\r\n    //Create New Dimension\r\n    this.newDimension.label = this.newLabel;\r\n    this.newDimension.dimtype = this.selectedDimension.dimtype;\r\n    //Create Value, depending on Input\r\n    if (this.selectedDimension.dimtype == \"Date\") { this.newDimension.val = this.newDate.toString() };\r\n    if (this.selectedDimension.dimtype == \"Number\") { this.newDimension.val = this.newNumber };\r\n    if (this.selectedDimension.dimtype == \"Tag\") { this.newDimension.val = this.newTag };\r\n    //Update Selected Thought with new Dimensions\r\n    this.selectedThought.dimensions.unshift(this.newDimension);\r\n    const editThought = {\r\n      _id: this.selectedThought._id,\r\n      editDimensions: this.selectedThought.dimensions\r\n    };\r\n    this.dataService.editThought(editThought).subscribe(data => {\r\n      //Update Dimension-Content with new Link\r\n      this.internalService.changeThought(this.selectedThought._id);\r\n\r\n    });\r\n  }\r\n\r\n  changeType(label: string) {\r\n    if (label == \"Number\") { this.addNumber = true; this.addDate = false; this.addTag = false; };\r\n    if (label == \"Date\") { this.addDate = true; this.addNumber = false; this.addTag = false; };\r\n    if (label == \"Tag\") { this.addDate = false; this.addNumber = false; this.addTag = true; };\r\n    this.selectedDimension.dimtype = label;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    //GET USER Data\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.user = profile['user'];\r\n    });\r\n\r\n\r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n\r\n\r\n  }\r\n} ","module.exports = \"<mat-toolbar-row *ngIf=\\\"selectedThought.level > 0\\\">\\r\\n  \\r\\n    <form>\\r\\n      <mat-form-field>\\r\\n        <input matInput class=\\\"search-input\\\" placeholder=\\\"{{ selectedThought.label }}\\\" aria-label=\\\"Thought\\\" [formControl]=\\\"editThought\\\">\\r\\n      </mat-form-field>\\r\\n      <button mat-raised-button (click)=\\\"onEditSubmit()\\\">Edit Label</button>\\r\\n    </form>\\r\\n\\r\\n    <div *ngIf=\\\"selectedThought.dimensions.length\\\">\\r\\n      <mat-list>\\r\\n        <mat-list-item *ngFor=\\\"let dimension of selectedThought.dimensions\\\">{{ dimension.dim }} {{ dimension.val }}</mat-list-item>\\r\\n      </mat-list>\\r\\n    </div>\\r\\n \\r\\n</mat-toolbar-row>\\r\\n\\r\\n<mat-toolbar-row *ngIf=\\\"selectedThought.level <= 0\\\">\\r\\n  You can't edit Thoughts on this level.\\r\\n</mat-toolbar-row>\"","module.exports = \".spacer {\\n  flex: 1 1 auto; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { Thought } from '../../../models/thought';\r\nimport { InternalService } from '../../../services/internal.service';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  editThought: FormControl;\r\n  selectedThought: Thought;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private internalService: InternalService,\r\n    private dataService: DataService,\r\n    private authService: AuthService,\r\n    private router: Router) {\r\n      this.editThought = new FormControl();\r\n     }\r\n\r\n  \r\n    onEditSubmit() {\r\n      const editThought = {\r\n        _id: this.selectedThought._id,\r\n        editLabel: this.editThought.value\r\n      };\r\n      this.dataService.editThought(editThought).subscribe(data => {\r\n        this.internalService.changeThought(this.selectedThought._id);\r\n      });\r\n      \r\n    }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar-row *ngIf=\\\"selectedThought.level > 0\\\">\\r\\n  <form class=\\\"link-form\\\">\\r\\n    <mat-form-field class=\\\"link-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Link\\\" aria-label=\\\"Thought\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"thoughtCtrl\\\">\\r\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n        <mat-option *ngFor=\\\"let thought of filteredThoughts | async\\\" [value]=\\\"thought.label\\\" (click)=\\\"linkThought(thought)\\\">\\r\\n          <span>{{ thought.label }}</span>\\r\\n          <small *ngFor=\\\"let context of thought.contexts\\\"> | {{ context.label }}</small>\\r\\n        </mat-option>\\r\\n      </mat-autocomplete>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n\\r\\n</mat-toolbar-row>\\r\\n\\r\\n<mat-toolbar-row *ngIf=\\\"selectedThought.level <= 0\\\">\\r\\n  You can't link Thoughts on this level.\\r\\n</mat-toolbar-row>\"","module.exports = \".link-form {\\n  min-width: 600px;\\n  max-width: 1000px;\\n  width: 100%; }\\n\\n.link-fullwidth {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Thought } from '../../../models/thought';\r\nimport { Dimension } from '../../../models/dimension';\r\nimport { FormControl, FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { InternalService } from '../../../services/internal.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { startWith ,  map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-link',\r\n  templateUrl: './link.component.html',\r\n  styleUrls: ['./link.component.scss']\r\n})\r\nexport class LinkComponent implements OnInit {\r\n  thoughts: Thought[];\r\n  selectedThought: Thought;\r\n  context: Thought;\r\n  contexts: Thought[];\r\n  lastInput: String;\r\n  dimensions: Dimension[];\r\n  newContexts: String[] = [];\r\n  newContents: String[] = [];\r\n  contextContent: String[] = [];\r\n  private: any[];\r\n  username;\r\n  userId;\r\n  //Autocomplete\r\n  thoughtCtrl: FormControl;\r\n  newThought: FormControl;\r\n  filteredThoughts: Observable<Thought[]>;\r\n  constructor(private dataService: DataService,\r\n    private formBuilder: FormBuilder,\r\n    private internalService: InternalService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    //Autocomplete\r\n    this.thoughtCtrl = new FormControl();\r\n    this.newThought = new FormControl();\r\n    this.filteredThoughts = this.thoughtCtrl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(thought => thought ? this.filterThoughts(thought) : this.thoughts.slice())\r\n      );\r\n\r\n  }\r\n\r\n  filterThoughts(label: string) {\r\n    this.lastInput = label;\r\n    return this.thoughts.filter(thought =>\r\n      thought.label.toLowerCase().indexOf(label.toLowerCase()) === 0);\r\n  }\r\n  \r\n  linkThought(thought) {\r\n    //Get Thought to Update\r\n    this.dataService.getSingleThought(this.selectedThought._id).subscribe(data => {\r\n      this.contextContent = data['thought'].contents;\r\n      this.contextContent.push(thought._id);\r\n\r\n      const editThought = {\r\n        _id: this.selectedThought._id,\r\n        editContents: this.contextContent\r\n      };\r\n\r\n      this.dataService.editThought(editThought).subscribe(data => {\r\n        this.internalService.changeThought(this.selectedThought._id);\r\n        this.newContexts = [];\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    //GET USER Data\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile['user'].username; // Used when creating new blog posts and comments\r\n      this.userId = profile['user']._id;\r\n      this.private = profile['user'].private;\r\n    });\r\n\r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n\r\n\r\n  }\r\n}\r\n","module.exports = \".searchbar-fullwidth {\\r\\n  width: 100%;\\r\\n}\\r\\n.searchbar-form {\\r\\n  min-width: 600px;\\r\\n  max-width: 1000px;\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<mat-toolbar-row *ngIf=\\\"selectedThought.level > 2\\\">\\r\\n\\r\\n  <form class=\\\"searchbar-form\\\">\\r\\n    <mat-form-field class=\\\"searchbar-full-width\\\">\\r\\n      <input matInput placeholder=\\\"New\\\" aria-label=\\\"Thought\\\" [formControl]=\\\"newThought\\\">\\r\\n    </mat-form-field>\\r\\n    <button mat-button *ngIf=\\\"selectedThought.label\\\" (click)=\\\"onNewSubmit()\\\">Save Thought</button>\\r\\n\\r\\n\\r\\n  </form>\\r\\n  \\r\\n</mat-toolbar-row>\\r\\n<div *ngIf=\\\"selectedThought.level == 2\\\">\\r\\n    <form class=\\\"searchbar-form\\\">\\r\\n  <mat-toolbar-row>\\r\\n\\r\\n   \\r\\n      <mat-form-field class=\\\"searchbar-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Create a new Persona\\\" aria-label=\\\"Thought\\\" [formControl]=\\\"newPersona\\\">\\r\\n      \\r\\n      </mat-form-field>\\r\\n     \\r\\n</mat-toolbar-row>\\r\\n<mat-toolbar-row>\\r\\n    <mat-slide-toggle>Make it a public Persona</mat-slide-toggle>\\r\\n    <button mat-button *ngIf=\\\"selectedThought.label\\\" (click)=\\\"onPersonaSubmit()\\\">Save Persona</button>  \\r\\n</mat-toolbar-row>\\r\\n</form>\\r\\n</div>\\r\\n\\r\\n\\r\\n<mat-toolbar-row *ngIf=\\\"selectedThought.level == 0 || selectedThought.level < -1\\\">\\r\\n  You can't Add Thoughts on this level.\\r\\n</mat-toolbar-row>\\r\\n\\r\\n<mat-toolbar-row *ngIf=\\\"selectedThought.level == -1\\\">\\r\\n  Create new Persona: Public / Private\\r\\n</mat-toolbar-row>\"","import { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\r\n\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Thought } from '../../../models/thought';\r\nimport { Dimension } from '../../../models/dimension';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { InternalService } from '../../../services/internal.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-new',\r\n  templateUrl: './new.component.html',\r\n  styleUrls: ['./new.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NewComponent implements OnInit {\r\n  thoughts: Thought[];\r\n  selectedThought: Thought;\r\n  context: Thought;\r\n  contexts: Thought[];\r\n  lastInput: String;\r\n  dimensions: Dimension[];\r\n  newContexts: String[] = [];\r\n  newContents: String[] = [];\r\n  contextContent: String[] = [];\r\n  //Autocomplete\r\n  thoughtCtrl: FormControl;\r\n  newThought: FormControl;\r\n  newPersona: FormControl;\r\n  filteredThoughts: Observable<Thought[]>;\r\n  saveId;\r\n  messageClass;\r\n  message;\r\n  newCompApp;\r\n  addDimensions = false;\r\n  username;\r\n  userId;\r\n  unstructured;\r\n  showDiary = false;\r\n  showPlans = false;\r\n  memoriesId;\r\n  showCopyThought = false;\r\n  showNewThought = true;\r\n  showLinkThought = false;\r\n  private: any[];\r\n  selectedDimension;\r\n  addNumber = false;\r\n  addDate = false;\r\n\r\n  constructor(private dataService: DataService,\r\n    private formBuilder: FormBuilder,\r\n    private internalService: InternalService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    //Autocomplete\r\n    this.thoughtCtrl = new FormControl();\r\n    this.newThought = new FormControl();\r\n    this.newPersona = new FormControl();\r\n  }\r\n\r\n \r\n  onPersonaSubmit() {\r\n    this.newContexts = [];  // Reset Context\r\n    this.dataService.getSingleThought(this.selectedThought._id).subscribe(data => { // Get Context of selected Thought\r\n      this.newContexts = data['thought'].contexts;                                     //Save Context of selected Thought\r\n      this.newContexts.unshift(this.selectedThought._id);                           //Add Selected Thought as Context\r\n  this.contextContent = data['thought'].contents;\r\n\r\n      const newThought = {  // create New Thought\r\n        label: this.newThought.value,\r\n        level: this.selectedThought.level,\r\n        color: \"FFFFFF\",\r\n        clicks: 0,\r\n        showAs: \"grid\",\r\n        user: this.userId,\r\n        contexts: this.newContexts,\r\n        contents: this.newContents,\r\n        dimensions: this.dimensions,\r\n        texture: \"\",\r\n        form: \"circle\",\r\n        privacy: \"private\"\r\n      };\r\n\r\n\r\n      this.dataService.newThought(newThought).subscribe(data => {\r\n        this.saveId = data['newId'];\r\n\r\n\r\n        this.contextContent.push(this.saveId);\r\n\r\n        const editThought = {\r\n          _id: this.selectedThought._id,\r\n          editContents: this.contextContent\r\n        };\r\n\r\n        this.dataService.editThought(editThought).subscribe(data => {\r\n          this.internalService.changeThought(this.selectedThought._id);\r\n          this.newContexts = [];\r\n        });\r\n      });\r\n    });\r\n  }\r\n \r\n\r\n  onNewSubmit() {\r\n    this.newContexts = [];  // Reset Context\r\n    this.dataService.getSingleThought(this.selectedThought._id).subscribe(data => { // Get Context of selected Thought\r\n      this.newContexts = data['thought'].contexts;                                     //Save Context of selected Thought\r\n      this.newContexts.unshift(this.selectedThought._id);                           //Add Selected Thought as Context\r\n      this.contextContent = data['thought.contents'];\r\n\r\n      const newThought = {  // create New Thought\r\n        label: this.newThought.value,\r\n        level: this.selectedThought.level,\r\n        color: \"FFFFFF\",\r\n        clicks: 0,\r\n        showAs: \"grid\",\r\n        user: this.userId,\r\n        contexts: this.newContexts,\r\n        contents: this.newContents,\r\n        dimensions: this.dimensions,\r\n        texture: \"\",\r\n        form: \"circle\",\r\n        privacy: \"private\"\r\n      };\r\n\r\n\r\n      this.dataService.newThought(newThought).subscribe(data => {\r\n        this.saveId = data['newId'];\r\n\r\n\r\n        this.contextContent.push(this.saveId);\r\n\r\n        const editThought = {\r\n          _id: this.selectedThought._id,\r\n          editContents: this.contextContent\r\n        };\r\n\r\n        this.dataService.editThought(editThought).subscribe(data => {\r\n          this.internalService.changeThought(this.selectedThought._id);\r\n          this.newContexts = [];\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  addDimension(userDimension) {\r\n    if(userDimension.dimtype == \"Number\") { this.addNumber = true;\r\n      this.addDate = false;\r\n    }\r\n    if(userDimension.dimtype == \"Date\") { this.addDate = true; this.addNumber = false; }\r\n    this.selectedDimension = userDimension;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    //GET USER Data\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile['user'].username; // Used when creating new blog posts and comments\r\n      this.userId = profile['user']._id;\r\n      this.private = profile['user'].private;\r\n    });\r\n\r\n\r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n\r\n\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar-row *ngIf=\\\"selectedThought\\\">\\r\\n  <form class=\\\"search-form\\\">\\r\\n    <mat-form-field class=\\\"search-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Search\\\" aria-label=\\\"Thought\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"thoughtCtrl\\\">\\r\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n        <mat-option *ngFor=\\\"let thought of filteredThoughts | async\\\" [value]=\\\"thought.label\\\" (click)=\\\"goToThought(thought)\\\">\\r\\n          <span>{{ thought.label }}</span>\\r\\n          <small *ngFor=\\\"let context of thought.contexts\\\"> | {{ context.label }}</small>\\r\\n        </mat-option>\\r\\n      </mat-autocomplete>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n</mat-toolbar-row>\"","module.exports = \"c\\n.spacer {\\n  flex: 1 1 auto; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { startWith ,  map } from 'rxjs/operators';\r\nimport { Thought } from '../../../models/thought';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { InternalService } from '../../../services/internal.service';\r\nimport { Dimension } from '../../../models/dimension';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  thoughts: Thought[];\r\n  selectedThought: Thought;\r\n  context: Thought;\r\n  contexts: Thought[];\r\n  lastInput: String;\r\n  dimensions: Dimension[];\r\n  newContexts: String[] = [];\r\n  newContents: String[] = [];\r\n  contextContent: String[] = [];\r\n  private: any[];\r\n  username;\r\n  userId;\r\n  //Autocomplete\r\n  thoughtCtrl: FormControl;\r\n  newThought: FormControl;\r\n  filteredThoughts: Observable<Thought[]>;\r\n  constructor(private dataService: DataService,\r\n    private formBuilder: FormBuilder,\r\n    private internalService: InternalService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    //Autocomplete\r\n    this.thoughtCtrl = new FormControl();\r\n    this.newThought = new FormControl();\r\n    this.filteredThoughts = this.thoughtCtrl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(thought => thought ? this.filterThoughts(thought) : this.thoughts.slice())\r\n      );\r\n\r\n  }\r\n\r\n  filterThoughts(label: string) {\r\n    this.lastInput = label;\r\n    return this.thoughts.filter(thought =>\r\n      thought.label.toLowerCase().indexOf(label.toLowerCase()) === 0);\r\n  }\r\n\r\n  goToThought(thought) {\r\n    this.internalService.changeThought(thought._id);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    //GET USER Data\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile['user'].username; // Used when creating new blog posts and comments\r\n      this.userId = profile['user']._id;\r\n      this.private = profile['user'].private;\r\n    });\r\n\r\n\r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n\r\n\r\n  }\r\n}\r\n\r\n","module.exports = \"\\r\\n\"","module.exports = \"<div *ngIf=\\\"selectedThought\\\">\\r\\n<div *ngIf=\\\"selectedThought.showAs == 'grid'\\\">\\r\\n                <app-grid></app-grid>\\r\\n</div>\\r\\n<div *ngIf=\\\"selectedThought.showAs == 'timeline'\\\">\\r\\n                <app-timeline></app-timeline>\\r\\n</div>\\r\\n<div *ngIf=\\\"selectedThought.showAs == 'graph'\\\">\\r\\n                <app-graph></app-graph>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, AfterContentInit } from '@angular/core';\r\nimport { Thought } from '../../models/thought';\r\nimport { DataService } from '../../services/data.service';\r\nimport { InternalService } from '../../services/internal.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { User } from '../../models/user';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-viewer',\r\n  templateUrl: './viewer.component.html',\r\n  styleUrls: ['./viewer.component.css']\r\n})\r\nexport class ViewerComponent implements OnInit {\r\n  user: User;\r\n  personas: any;\r\n  selectedThought: Thought;\r\n  contexts: Thought[];\r\n  contents: Thought[];\r\n  context: Thought;\r\n  siblings: Thought[];\r\n  username: String;\r\n  userId: String;;\r\n  starterId: String;\r\n  idCounter: 5;\r\n\r\n\r\n   constructor(private dataService: DataService,\r\n               private internalService: InternalService,\r\n               private router: Router,\r\n              private authService: AuthService) { }\r\n\r\n    changeTool(tool: String) {\r\n      this.internalService.changeTool(tool);\r\n    }\r\n\r\n   selectThought(id): void {\r\n    this.router.navigate(['viewer/', id]);\r\n      this.internalService.changeThought(id);  \r\n  }\r\n\r\n   ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n    console.log(profile);\r\n      //GET THOUGHTS \r\n     \r\n    this.internalService.selectedThoughtObs.subscribe(res => this.selectedThought = res);\r\n\r\n  });\r\n        // create an array with nodes\r\n \r\n\r\n\r\n    }\r\n    \r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  graph works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\">\\n  <mat-card-title>{{thought.label}}</mat-card-title>\\n  <mat-card-content>\\n    <button mat-button *ngFor=\\\"let content of thought.contents\\\">{{ content.label }}</button>\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Thought } from '../../../../models/thought';\n\n@Component({\n  selector: 'app-graph-grid',\n  templateUrl: './graph-grid.component.html',\n  styleUrls: ['./graph-grid.component.css']\n})\nexport class GraphGridComponent implements OnInit {\n\n  constructor() { }\n@Input() thought: Thought;\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card {\\r\\n    min-height: 99%;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div>\\n <button mat-raised-button  (click)=\\\"gotoThought(thought._id)\\\">{{thought.label}}</button>\\n  <mat-card-content class=\\\"card\\\">\\n    <button mat-button *ngFor=\\\"let content of thought.contents\\\" (click)=\\\"gotoThought(content._id)\\\">{{ content.label }}</button>\\n  </mat-card-content>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Thought } from '../../../../models/thought';\nimport { InternalService } from '../../../../services/internal.service';\n\n@Component({\n  selector: 'app-grid-grid',\n  templateUrl: './grid-grid.component.html',\n  styleUrls: ['./grid-grid.component.css']\n})\nexport class GridGridComponent implements OnInit {\n  @Input() thought: Thought;\n  constructor(private internalService: InternalService) { }\n\n  gotoThought(id){\n    this.internalService.changeThought(id);\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".content {\\r\\n    height: 600px;\\r\\n    background: white;\\r\\n}\\r\\n.gridster {\\r\\n    border: white;\\r\\n    background: white;\\r\\n}\\r\\n.grid-grid {\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<gridster [options]=\\\"config\\\" class=\\\"content\\\">\\n  <div *ngFor=\\\"let content of contents\\\">\\n    <gridster-item [item]=\\\"content.grid\\\">\\n      <div *ngIf=\\\"content.showAs == 'timeline'\\\">\\n        <app-timeline-grid></app-timeline-grid>\\n      </div>\\n      <div *ngIf=\\\"selectedThought.showAs == 'graph'\\\">\\n        <app-graph-grid></app-graph-grid>\\n        </div>\\n        <div *ngIf=\\\"selectedThought.showAs == 'network'\\\">\\n            <app-network-grid></app-network-grid>\\n            </div>\\n            <div *ngIf=\\\"selectedThought.showAs == 'grid'\\\">\\n            \\n                <app-grid-grid [thought]=\\\"content\\\" class=\\\"grid-grid\\\"></app-grid-grid>\\n             \\n                </div>\\n    </gridster-item>\\n    </div>\\n</gridster>\"","import { Component, OnInit } from '@angular/core';\nimport { GridsterConfig, GridsterItem } from 'angular-gridster2';\nimport { GridsterConfigService } from './gridster-config.service';\nimport { InternalService } from '../../../services/internal.service';\nimport { Thought } from '../../../models/thought';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css']\n})\nexport class GridComponent implements OnInit {\nselectedThought: Thought;\nconfig: GridsterConfig;\nthoughtContents: Thought[];\ncontents: Thought[];\ncounter;\n  constructor(private gridsterConfigService: GridsterConfigService, private internalService: InternalService) { }\n  changedOptions() {\n    this.config.api.optionsChanged();\n  }\n\n  removeItem(item) {\n    this.contents.splice(this.contents.indexOf(item), 1);\n  }\n\n\n  ngOnInit() {\n    this.config = this.gridsterConfigService.getConfig();\n    this.contents = [];\n  \n    this.internalService.selectedThoughtObs.subscribe(selectedThought => {\n      this.contents = [];\n      this.selectedThought = selectedThought;\n      if(this.selectedThought.contents.length){\n        this.counter = 1;\n        this.selectedThought.contents.forEach(content => {\n        if(content){\n          content.grid = ({ cols: 1, rows: 1, y: 0, x: 0 })\n        this.contents.push(content);\n      }\n        console.log(this.contents);\n      });\n    }\n    \n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GridsterConfig } from 'angular-gridster2';\n\nconst GridsterConfig: GridsterConfig = {\n  gridType: 'fit', // 'fit' will fit the items in the container without scroll;\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  compactType: 'none', // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized and has size > 0.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is removed.\n    // Arguments: gridsterItem, gridsterItemComponent\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // only for gridType: `fixed` , `verticalFixed`, `horizontalFixed`\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: true, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: true, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  pushItems: true, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: 'onDrag&Resize', // display background grid of rows and columns. Options: 'always' | 'onDrag&Resize' | 'none'\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false // scroll to new items placed in a scrollable view\n};\n\n\n@Injectable()\nexport class GridsterConfigService {\n\n  constructor() { }\n getConfig(): GridsterConfig {\n   return GridsterConfig;\n }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  network-grid works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-network-grid',\n  templateUrl: './network-grid.component.html',\n  styleUrls: ['./network-grid.component.css']\n})\nexport class NetworkGridComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  timeline-grid works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-timeline-grid',\n  templateUrl: './timeline-grid.component.html',\n  styleUrls: ['./timeline-grid.component.css']\n})\nexport class TimelineGridComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#contentnet {\\r\\n    width: 100%;\\r\\n    height: 60%;\\r\\n    \\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"fullscreen\\\">\\n    <div id=\\\"contentnet\\\"></div>\\n    </div>\\n    \"","import { Component, OnInit } from '@angular/core';\nimport { Thought } from '../../../models/thought';\nimport { DataSet, Network } from 'vis';\nimport { InternalService } from '../../../services/internal.service';\n\n@Component({\n  selector: 'app-network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.css']\n})\nexport class NetworkComponent implements OnInit {\n  selectedThought: Thought;\n  saveIds: string[];\n  contents: Thought[];\n  contexts: Thought[];\n  siblings: Thought[];\n  nodeIds = [1];\n  nodes = new DataSet([\n  ]);\n  edges = new DataSet([\n  ]);\n  network;\n  goId;\n  lastId;\n\n  data = {\n    nodes: this.nodes,\n    edges: this.edges\n  };\n  options = {\n    layout: {\n      hierarchical: {\n        sortMethod: 'directed'\n      }\n    },\n    nodes: {\n      shape: 'dot',\n      size: 30,\n      font: {\n        size: 32,\n        color: '#111111'\n      },\n      borderWidth: 2,\n      shadow: true,\n    },\n    groups: {\n      0: {\n        size: 15,\n        color: '#A59BB2',\n        font: { size: 16, strokeWidth: 3, strokeColor: 'white' },\n      },\n      1: {\n        size: 30,\n        color: '#84729C',\n        font: { size: 22, strokeWidth: 3, strokeColor: 'white' }\n          },\n      2: { color: '#55558E',\n      size: 25,\n      font: { size: 18, strokeWidth: 3, strokeColor: 'white' }\n     },\n      \n      3: { color: '#4C2C76',\n      size: 20,\n      font: { size: 14, strokeWidth: 3, strokeColor: 'white' }\n     },\n     4: { color: '#361265',\n     size: 10,\n     font: { size: 12, strokeWidth: 3, strokeColor: 'white' }\n    },\n\n    },\n    edges: {\n      width: 2\n    }\n  };\n  constructor(public internalService: InternalService) { }\n\n  ngOnInit() {\n\n    \n    this.internalService.selectedThoughtObs.subscribe(selT => {\n      this.selectedThought = selT;\n      if (this.selectedThought) {\n        this.nodes.clear();\n        this.edges.clear();\n        this.lastId = false;\n        this.selectedThought.contexts.reverse();\n        this.selectedThought.contexts.forEach(context => { // Add Node for each Context\n          this.nodes.add({ id: context._id, label: context.label, group: 0 }); // Add Node for Context\n          if (this.lastId) {\n            this.edges.add({ from: this.lastId, to: context._id })      // Add Edge to Selected Thought\n          }\n          this.lastId = context._id;\n        });\n        this.nodes.add({ id: this.selectedThought._id, label: this.selectedThought.label, group: 1 });\n        this.edges.add({ from: this.lastId, to: this.selectedThought._id })      // Add Selected Thought\n        \n\n        this.selectedThought.contents.forEach(content => {\n          this.nodes.add({ id: content._id, label: content.label, group: 3 });\n          this.edges.add({ from: this.selectedThought._id, to: content._id })      // Add Contents\n        });\n        this.selectedThought.dimensions.forEach(dimension => {\n          if(dimension.dimtype == \"Date\"){\n            let newDate = new Date(dimension.val);\n          this.nodes.add({ id: dimension._id, label: dimension.label + \" \" + newDate.toLocaleDateString(), group: 4 });\n        } else { \n\n          this.nodes.add({ id: dimension._id, label: dimension.label + \" \" + dimension.val, group: 2 });\n        }\n          this.edges.add({ from: this.selectedThought._id, to: dimension._id })      // Add Dimensions\n        });\n      }\n   \n    \n\n    var container = document.getElementById('contentnet');\n    this.network = new Network(container, this.data, this.options);\n\n    this.network.on(\"click\", params => {\n      this.goId = params.nodes[0];\n      if(params.nodes[0]) { this.internalService.changeThought(this.goId);\n        var options = {\n          position: {x: params.pointer.canvas.x, y: params.pointer.canvas.y},\n          scale: 1,\n          offset: {x:0, y:0},\n          animation: true // default duration is 1000ms and default easingFunction is easeInOutQuad.\n        };\n        this.network.moveTo(options);\n      \n      };\n    });\n  });\n\n\n\n  }\n\n}\n","module.exports = \"\\r\\n\"","module.exports = \"<div id=\\\"visualization\\\"></div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataSet, Timeline } from 'vis';\nimport { InternalService } from '../../../services/internal.service';\n\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.css']\n})\nexport class TimelineComponent implements OnInit {\n// Create a DataSet (allows two way data-binding)\nitems = new DataSet([]);\noptions = {};  // Configuration for the Timeline\n\n  constructor(private internalService: InternalService) { }\n\n  ngOnInit() {\n\n    this.internalService.selectedThoughtObs.subscribe(selectedThought => {\n      this.items.clear();\n      if(selectedThought){\n      selectedThought.dimensions.forEach(dimension => {\n        if(dimension.dimtype == \"Date\") {\n          this.items.add( {id: dimension._id, content: selectedThought.label, start: dimension.val})\n          } \n      });\n      selectedThought.contents.forEach(content => {\n        content.dimensions.forEach(dimension => {\n          if(dimension.dimtype == \"Date\") {\n            this.items.add( {id: dimension._id, content: content.label, start: dimension.val})\n          }\n        });\n      });\n \n    }\n});\n\n  // DOM element where the Timeline will be attached\n  var container = document.getElementById('visualization');\n\n  // Create a Timeline\n  var timeline = new Timeline(container, this.items, this.options);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.loggedIn()) {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/login']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to determine whether user is authorized to view route\r\n  canActivate() {\r\n    // Check if user is logged in\r\n    if (this.authService.loggedIn()) {\r\n      this.router.navigate(['/']); // Return error, route to home\r\n      return false; // Return false: user not allowed to view route\r\n    } else {\r\n      return true; // Return true: user is allowed to view route\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatNativeDateModule  } from '@angular/material';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n@NgModule({\r\n\timports: [MatNativeDateModule, MatSlideToggleModule, MatButtonModule, MatTooltipModule, MatSnackBarModule, MatTableModule, MatStepperModule, MatIconModule, MatGridListModule, MatDialogModule, MatChipsModule, MatDatepickerModule, MatListModule, MatMenuModule, BrowserAnimationsModule, MatToolbarModule, MatCardModule, MatAutocompleteModule, MatExpansionModule, MatInputModule, MatTabsModule, MatSidenavModule],\r\n\texports: [MatButtonModule, MatSlideToggleModule, MatSnackBarModule, MatTooltipModule, MatTableModule, MatStepperModule, MatIconModule, MatGridListModule, MatDialogModule, MatChipsModule, MatDatepickerModule, MatListModule, MatMenuModule, BrowserAnimationsModule, MatToolbarModule, MatCardModule, MatAutocompleteModule, MatExpansionModule, MatInputModule, MatTabsModule, MatSidenavModule]\r\n\t})\r\n\r\nexport class MaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\ndomain = \"http://localhost:8080\";\r\nauthToken;\r\nuser;\r\noptions;\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  \t) { }\r\n\r\n    // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    if(this.authToken){\r\n    this.options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authToken // Attach token\r\n      })\r\n    }\r\n    }\r\n  }\r\n \r\n \r\n  \t  // Function to get token from client local storage\r\n  loadToken() {\r\n  this.authToken = localStorage.getItem('token'); // Get token and asssign to variable to be used elsewhere\r\n  \t}\r\n  registerUser(user) {\r\n    return this.http.post(this.domain + '/authentication/register', user);\r\n  }\r\n  editUser(user) {\r\n    return this.http.put(this.domain + '/authentication/edit', user);\r\n  }\r\n  // Function to check if username is taken\r\n  checkUsername(username) {\r\n    return this.http.get(this.domain + '/authentication/checkUsername/' + username);\r\n  }\r\n\r\n  // Function to check if e-mail is taken\r\n  checkEmail(email) {\r\n    return this.http.get(this.domain + '/authentication/checkEmail/' + email);\r\n  }\r\n  // Function to login user\r\n  login(user) {\r\n    return this.http.post(this.domain + '/authentication/login', user);\r\n  }\r\n   // Function to logout\r\n  logout() {\r\n    this.authToken = null; // Set token to null\r\n    this.user = null; // Set user to null\r\n    localStorage.clear(); // Clear local storage\r\n  }\r\n   // Function to store user's data in client local storage\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('token', token); // Set token in local storage\r\n    localStorage.setItem('user', JSON.stringify(user)); // Set user in local storage as string\r\n    this.authToken = token; // Assign token to be used elsewhere\r\n    this.user = user;       // Set user to be used elsewhere\r\n  }\r\n  \r\n\r\n  // Function to get user's profile data\r\n  getProfile() {\r\n    this.createAuthenticationHeaders(); // Create headers before sending to API\r\n    return this.http.get(this.domain + '/authentication/profile', this.options);\r\n  }\r\n    // Function to check if user is logged in\r\n  loggedIn() {\r\n    return tokenNotExpired();\r\n  }\r\n\r\n}\r\n \r\n","import { Injectable } from '@angular/core';\r\nimport { Headers, RequestOptions } from '@angular/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Thought } from '../models/thought';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { PubRoom } from '../models/pubRoom';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  options;\r\n  domain = this.authService.domain;\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.authService.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authService.authToken // Attach token\r\n      })\r\n    }\r\n  }\r\n\r\n  /* ===============================================================\r\n     ADD DATA\r\n  =============================================================== */\r\n\r\n  newThought(thought) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + '/api/newThought', thought, this.options);\r\n  }\r\n\r\n  newPubThought(thought) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + '/api/newPubThought', thought, this.options);\r\n  }\r\n\r\n  newPubRoom(room) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + '/api/newPubRoom', room, this.options);\r\n  }\r\n\r\n  /* ===============================================================\r\n     GET DATA\r\n  =============================================================== */\r\n  getPubRoom(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/api/getPubRoom/' + id, this.options);\r\n  }\r\n\r\n\r\n  getAllThought() {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/api/allThought', this.options);\r\n  }\r\n\r\n  getSingleThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/api/singleThought/' + id, this.options);\r\n  }\r\n\r\n  getTimeArray(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/api/timeArray/' + id, this.options);\r\n  }\r\n  getThoughtByName(label) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/api/thoughtByName/' + label, this.options);\r\n  }\r\n\r\n\r\n  getThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/api/getThought/' + id, this.options);\r\n  }\r\n\r\n  getContent(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/api/getContent/' + id, this.options);\r\n  }\r\n\r\n\r\n  /* ===============================================================\r\n    DELETE/UPDATE DATA\r\n =============================================================== */\r\n  deleteThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.delete(this.domain + '/api/deleteThought/' + id, this.options);\r\n  }\r\n\r\n  // Function to edit/update Label\r\n  editThought(editthought) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.put(this.domain + '/api/editThought/', editthought, this.options);\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Thought } from '../models/thought';\r\nimport { ChangeTracker } from '../models/changeTracker';\r\nimport { Observable, of, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { DataService } from './data.service';\r\nimport { PubRoom } from '../models/pubRoom';\r\nimport { nullSafeIsEquivalent } from '@angular/compiler/src/output/output_ast';\r\nimport { User } from '../models/user';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class InternalService {\r\n  \r\n  // Array with all Thoughts which can be searched.\r\n  public searchList = new BehaviorSubject<Thought[]>([]);\r\n  searchListObs = this.searchList.asObservable();\r\n  //Selected Thought (Thought incl. Content which is being shown)\r\n  public selectedThought = new BehaviorSubject<Thought>(null);\r\n  selectedThoughtObs = this.selectedThought.asObservable();\r\n  //Selected Room (default: Welcome)\r\n  public selectedRoom = new BehaviorSubject<PubRoom>({\r\n    _id: \"2\",\r\n    label: \"Welcome!\",\r\n    admin: [],\r\n    members: [],\r\n    contents: [],\r\n    dimensions: [],\r\n    visible: \"open\",\r\n    activeUsers: []\r\n  });\r\n  selectedRoomObs = this.selectedRoom.asObservable();\r\n  //Node which is selected, relevant for Editingpossibilities\r\n  public selectedNode = new BehaviorSubject<Thought>(null);\r\n  selectedNodeObs = this.selectedNode.asObservable();\r\n  //ReplaySubject which holds the last 10 changes.\r\n  public changeTracker = new ReplaySubject<Thought[]>();\r\n  changeTrackerObs = this.changeTracker.asObservable();\r\n  //Selected Tool\r\n  public selectedTool = new BehaviorSubject<String>(\"none\");\r\n  selectedToolObs = this.selectedTool.asObservable();\r\n  //User (default: Guest)\r\n  public selectedUser = new BehaviorSubject<User>({\r\n    _id: \"3\",\r\n    email: \"guest@complexity-app.com\",\r\n    username: \"Guest\",\r\n    private: [],\r\n    public: [],\r\n    rooms: [{\r\n      _id: \"2\",\r\n      label: \"Welcome!\",\r\n      admin: [],\r\n      members: [],\r\n      contents: [],\r\n      dimensions: [],\r\n      visible: \"open\",\r\n      activeUsers: []\r\n    }],\r\n    friends: []\r\n  });\r\n  selectedUserObs = this.selectedUser.asObservable();\r\n\r\n  constructor(private dataService: DataService, private authService: AuthService) {\r\n  }\r\n\r\n  changeThought(id) {\r\n    this.dataService.getThought(id).subscribe(data => {\r\n      const thought: Thought = data['thought']; //Load Populated Thought\r\n      this.selectedThought.next(thought);\r\n    });\r\n  }\r\n  changeRoom(id) {\r\n    this.dataService.getPubRoom(id).subscribe(data => {\r\n      const pubRoom: PubRoom = data['pubRoom'];\r\n      this.selectedRoom.next(pubRoom);\r\n      this.roomToThought(pubRoom);\r\n    })\r\n  }\r\n  roomToThought(pubRoom: PubRoom) {\r\n    const thought: Thought =  {\r\n      _id: pubRoom._id,\r\n      contents: pubRoom.contents,\r\n      level: 0,\r\n      label: pubRoom.label,\r\n      user: pubRoom.admin[0],\r\n      color: \"#FFFFFF\",\r\n      clicks: pubRoom.likes,\r\n      dimensions: pubRoom.dimensions,\r\n      showAs: \"grid\"\r\n    }\r\n    this.selectedThought.next(thought);\r\n    console.log(thought);\r\n  }\r\n\r\n  changeTool(tool: String) {\r\n    this.selectedTool.next(tool);\r\n  }\r\n\r\n  changeShowAs(label) {\r\n    const viewThought = this.selectedThought.getValue();\r\n    viewThought.showAs = label;\r\n    this.selectedThought.next(viewThought);\r\n  }\r\n\r\n  loadUser() {\r\n    if(this.authService.loggedIn()){\r\n    this.authService.getProfile().subscribe(data => {\r\n      if(data['user']){ \r\n      const user: User = data['user'];\r\n      this.changeRoom(user.rooms[0]._id);\r\n      this.selectedUser.next(user);\r\n    } else {\r\n      const user: User =    {  _id: \"3\",\r\n      email: \"guest@complexity-app.com\",\r\n      username: \"Guest\",\r\n      private: [],\r\n      public: [],\r\n      rooms: [{_id: \"2\"}],\r\n      friends: []\r\n    }\r\n    this.selectedUser.next(user);\r\n    this.changeRoom(user.rooms[0]._id);\r\n         }\r\n    });\r\n  }\r\n  }\r\n\r\n  getSearchList() {\r\n    this.dataService.getAllThought().subscribe(data => {\r\n      this.searchList.next(data['allThought']);\r\n    });\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}