{"version":3,"sources":["C:/Users/loebb/complexity-app/client/src/$_lazy_route_resource lazy","C:/Users/loebb/complexity-app/client/src/app/app-routing.module.ts","C:/Users/loebb/complexity-app/client/src/app/app.component.css","C:/Users/loebb/complexity-app/client/src/app/app.component.html","C:/Users/loebb/complexity-app/client/src/app/app.component.ts","C:/Users/loebb/complexity-app/client/src/app/app.module.ts","C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.css","C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.html","C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.css","C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.html","C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.css","C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.html","C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.css","C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.html","C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.css","C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.html","C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.css","C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.html","C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.css","C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.html","C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/something/something.component.css","C:/Users/loebb/complexity-app/client/src/app/components/something/something.component.html","C:/Users/loebb/complexity-app/client/src/app/components/something/something.component.ts","C:/Users/loebb/complexity-app/client/src/app/guards/auth.guard.ts","C:/Users/loebb/complexity-app/client/src/app/guards/notAuth.guard.ts","C:/Users/loebb/complexity-app/client/src/app/services/auth.service.ts","C:/Users/loebb/complexity-app/client/src/app/services/data.service.ts","C:/Users/loebb/complexity-app/client/src/environments/environment.ts","C:/Users/loebb/complexity-app/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core'; \r\nimport { HomeComponent } from './components/home/home.component'; \r\nimport { EverythingComponent } from './components/everything/everything.component';\r\nimport { SomethingComponent } from './components/something/something.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { NewComponent } from './components/new/new.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { \r\n  \tpath: '', component: HomeComponent \r\n  },\r\n  { path: 'everything', component: EverythingComponent, canActivate: [AuthGuard] \r\n  },\r\n   { path: 'something/:id', component: SomethingComponent, canActivate: [AuthGuard] \r\n  },\r\n  { path: 'new', component: NewComponent, canActivate: [AuthGuard] \r\n  },\r\n  { path: 'register', component: RegisterComponent, canActivate: [NotAuthGuard] \r\n  },  \r\n  { path: 'login', component: LoginComponent, canActivate: [NotAuthGuard] \r\n  },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] \r\n  },\r\n  {\r\n  \tpath: '**', component: HomeComponent\r\n  }\r\n  ];\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\t<flash-messages></flash-messages>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { EverythingComponent } from './components/everything/everything.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { DataService } from './services/data.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { NewComponent } from './components/new/new.component';\r\nimport { SomethingComponent } from './components/something/something.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    EverythingComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    NewComponent,\r\n    SomethingComponent\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    HttpModule,\r\n    FlashMessagesModule\r\n  ],\r\n  providers: [AuthService, AuthGuard, NotAuthGuard, DataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h4 { text-align: center; }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.css\n// module id = ../../../../../src/app/components/everything/everything.component.css\n// module chunks = main","module.exports = \"<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"card col-md-4\\\" *ngFor=\\\"let thought of everything\\\">\\r\\n\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t<ul class=\\\"list-group list-group-flush\\\">\\r\\n\\t\\t\\t\\t    <li class=\\\"list-group-item\\\"><h4><a [routerLink]=\\\"['../something/', thought._id]\\\">{{ thought.value }}</a></h4></li>\\r\\n\\t\\t\\t\\t    <!--<li class=\\\"list-group-item\\\">\\r\\n\\t\\t\\t\\t    \\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"value\\\" formControlName=\\\"value\\\" placeholder=\\\"{{ thought.meaning }}\\\">\\r\\n\\t\\t\\t\\t    \\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meaning\\\" formControlName=\\\"meaning\\\" value=\\\"{{ thought._id }}\\\">\\r\\n\\t\\t\\t\\t       \\t<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n\\t\\t\\t\\t    </li>-->\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.html\n// module id = ../../../../../src/app/components/everything/everything.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { DataService } from '../../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-everything',\r\n  templateUrl: './everything.component.html',\r\n  styleUrls: ['./everything.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EverythingComponent implements OnInit {\r\n\tmessageClass;\r\n\tmessage;\r\n\tprocessing = false;\r\n\tusername;\r\n  userId;\r\n\tvalue;\r\n\tallThought;\r\n\tuser;\r\n  thought;\r\n  everything;\r\n\r\n\r\n  constructor(\r\n  private authService: AuthService,\r\n\tprivate dataService: DataService\r\n  \t) {}\r\n  \t   // Function to create new blog form\r\n\r\n\r\n  getAllThought() {\r\n  // Function to GET all blogs from database\r\n  this.dataService.getAllThought().subscribe(data => {\r\n  this.allThought = data.thought; // Assign array to use in HTML\r\n  });\r\n  }\r\n\r\n  getEverything() {\r\n  // Function to GET all blogs from database\r\n  this.dataService.getEverything().subscribe(data => {\r\n  this.everything = data.everything; // Assign array to use in HTML\r\n  });\r\n  }\r\n\r\n  ngOnInit() {\r\n  // Get profile username on page load\r\n  this.authService.getProfile().subscribe(profile => {\r\n  this.username = profile.user.username; // Used when creating new blog posts and comments\r\n  this.userId = profile.user._id;\r\n  this.getEverything(); // Get all blogs on component load\r\n  });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\r\\n  <h1>Complexity MEAN Stack Application</h1>\\r\\n  <p class=\\\"lead\\\">Welcome to the Complexity MEAN Stack Application by <strong>Boas Loeb</strong><br>This site is in developement...</p>\\r\\n  <div>\\r\\n  \\t<a routerLink=\\\"/register\\\" class=\\\"btn btn-primary\\\">Register</a>\\r\\n  \\t\\t<a routerLink=\\\"/login\\\" class=\\\"btn btn-default\\\">Login</a>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Login Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n\\r\\n  <!-- Username Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Field  -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Submit Button -->\\r\\n  <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form;\r\n  previousUrl;\r\n \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private authGuard: AuthGuard    \r\n  ) {\r\n    this.createForm(); // Create Login Form when component is constructed\r\n  }\r\n\r\n  // Function to create login form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  // Function to disable form\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n\r\n  // Function to enable form\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe(data => {\r\n      // Check if response was a success or error\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data.message; // Set error message\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        this.message = data.message; // Set success message\r\n       this.authService.storeUserData(data.token, data.user)\r\n        // After 2 seconds, redirect to dashboard page\r\n        setTimeout(() => {\r\n          // Check if user was redirected or logging in for first time\r\n          if (this.previousUrl) {\r\n            this.router.navigate([this.previousUrl]); // Redirect to page they were trying to view before\r\n          } else {\r\n            this.router.navigate(['/everything']); // Navigate to dashboard view\r\n          }\r\n        }, 500);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // On page load, check if user was redirected to login\r\n    if (this.authGuard.redirectUrl) {\r\n      this.messageClass = 'alert alert-danger'; // Set error message: need to login\r\n      this.message = 'You must be logged in to view that page.'; // Set message\r\n      this.previousUrl = this.authGuard.redirectUrl; // Set the previous URL user was redirected from\r\n      this.authGuard.redirectUrl = undefined; // Erase previous URL\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar fixed-top navbar-expand-lg navbar-green bg-darkgreen\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Complexity-App</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home</a><span class=\\\"sr-only\\\">Home</span></li>\\r\\n    </ul>\\r\\n    <ul class=\\\"navbar-nav navbar-right\\\">\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a></li>\\r\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a></li>\\r\\n             <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a></li>\\r\\n             <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a></li>\\r\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/new\\\">New</a></li>\\r\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/everything\\\">Everything</a></li>\\r\\n    </ul>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"searchSubmit()\\\">\\r\\n    <ul class=\\\"nav navbar-nav navbar-right\\\" *ngIf=\\\"authService.loggedIn()\\\">\\r\\n\\r\\n        <div class=\\\"search-block\\\" [ngClass]=\\\"{ 'has-error': form.controls.search.dirty, 'has-success': thoughtByName && form.controls.search.dirty }\\\">\\r\\n          <input #searchTextBox (keyup)=\\\"onKeyup(searchTextBox.value)\\\" class=\\\"form-control\\\" formControlName=\\\"search\\\" name=\\\"search\\\" placeholder=\\\"Something\\\">\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </ul>\\r\\n  </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DataService } from '../../services/data.service';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  messageClass;\r\n  message;\r\n  username;\r\n  userId;\r\n  allThought;\r\n  searchTerm;\r\n  thoughtByName;\r\n  fountThoughtByName = false;\r\n  form;\r\n\r\n\r\nconstructor(\r\n\r\n    public dataService: DataService,\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private flashMessagesService: FlashMessagesService,\r\n    private formBuilder: FormBuilder\r\n\r\n  ) {\r\n  this.createNewForm(); // Create new  form on start up\r\n  }\r\n\r\n    createNewForm() {\r\n    this.form = this.formBuilder.group({\r\n       search: ''\r\n     })\r\n  }\r\n\r\n  getThoughtByName(value) {\r\n  // Function to GET all blogs from database\r\n  this.dataService.getThoughtByName(value).subscribe(data => {\r\n  this.thoughtByName = \r\n              {\r\n              value: data.thought.value,\r\n              _id: data.thought._id,\r\n              };\r\n  });\r\n  }\r\n  \r\n  getAllThought() {\r\n  // Function to GET all blogs from database\r\n  this.dataService.getAllThought().subscribe(data => {\r\n  this.allThought = data.thought; // Assign array to use in HTML\r\n  });\r\n  }\r\n  // Function to logout user\r\n  onLogoutClick() {\r\n    this.authService.logout(); // Logout user\r\n    this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); // Set custom flash message\r\n    this.router.navigate(['/']); // Navigate back to home page\r\n  }\r\n\r\n  onKeyup(searchText: string) {\r\n    this.getThoughtByName(searchText); // Get all blogs on component load\r\n  }\r\n\r\n  searchSubmit() {\r\n  this.router.navigate(['../something/', this.thoughtByName._id]); // Navigate back to home page\r\n  this.form.reset();\r\n   }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  this.authService.getProfile().subscribe(profile => {\r\n  this.username = profile.user.username; // Used when creating new blog posts and comments\r\n  this.userId = profile.user._id;\r\n  });\r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.css\n// module id = ../../../../../src/app/components/new/new.component.css\n// module chunks = main","module.exports = \"\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Login Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onNewSubmit()\\\">\\r\\n\\r\\n  <!-- Username Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"new\\\">New Thought</label>\\r\\n    <div>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"value\\\" formControlName=\\\"value\\\" />\\r\\n      <!-- Validation -->\\r\\n     </div>\\r\\n  </div>\\r\\n  <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\" />\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.html\n// module id = ../../../../../src/app/components/new/new.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\nimport { DataService } from '../../services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new',\r\n  templateUrl: './new.component.html',\r\n  styleUrls: ['./new.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NewComponent implements OnInit {\r\n\r\n  form;\r\n  message;\r\n  messageClass;\r\n  processing = false;\r\n  allThought;\r\n  username = '';\r\n  userId;\r\n  constructor(\r\n  \tprivate formBuilder: FormBuilder,\r\n  \tprivate authService: AuthService,\r\n  \tprivate dataService: DataService,\r\n    private router: Router\r\n  \t) {\r\n  \tthis.createForm();\r\n  }\r\n\r\n  createForm() {\r\n  \tthis.form = this.formBuilder.group({\r\n  \t\tvalue: '',\r\n  \t\tuser: '',\r\n  \t})\r\n  }\r\n\r\n onNewSubmit() {\r\n  \t// Create user object form user's inputs\r\n    this.processing = true;\r\n    const thought = {\r\n      value: this.form.get('value').value, // E-mail input field\r\n      user: this.userId,\r\n    };\r\n\r\n    this.dataService.newThought(thought).subscribe(data => {\r\n     if (!data.success) {\r\n     \tthis.messageClass = 'alert alert-danger';\r\n     \tthis.message = data.message;\r\n     \tthis.processing = false;\r\n     } else {\r\n     \tthis.messageClass = 'alert alert-success';\r\n     \tthis.message = data.message;\r\n     \t}\r\n       setTimeout(() => {\r\n        this.router.navigate(['/something', data.newId]); // Redirect to login view\r\n        });\r\n     });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get profile username on page load\r\n  \t  this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile.user.username; // Used when creating new blog posts and comments\r\n      this.userId = profile.user._id;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.css\n// module id = ../../../../../src/app/components/profile/profile.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"page-header\\\">Profile Page</h2>\\r\\n<ul class=\\\"list-group\\\">\\r\\n\\t<li class=\\\"list-group-item\\\">Username: {{ username }}</li>\\r\\n\\t<li class=\\\"list-group-item\\\">Email: {{ email }} </li>\\r\\n\\t</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\r\n  username = '';\r\n  email = '';\r\n\r\n\r\n  constructor(\r\n  \tprivate authService: AuthService\r\n  \t) { }\r\n\r\n    ngOnInit() {\r\n    // Once component loads, get user's data to display on profile\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile.user.username; // Set username\r\n      this.email = profile.user.email; // Set e-mail\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"page-header\\\">Register</h1>\\r\\n\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onRegisterSubmit()\\\">\\r\\n\\r\\n  <!-- Username Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\r\\n      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</li>\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">Username must not have any special characters</li>\\r\\n        <li *ngIf=\\\"usernameMessage\\\">{{ usernameMessage }}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Email Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\r\\n      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\"/>\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\r\\n        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\r\\n        <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\">\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters and requires at least one small, one big and one special Letter</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Confirm Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\r\\n      <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Submit Input -->\\r\\n  <input [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\r\\n\\r\\n</form>\\r\\n<!-- Registration Form /-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  form;\r\n  message;\r\n  messageClass;\r\n  processing = false;\r\n  emailValid;\r\n  emailMessage;\r\n  usernameValid;\r\n  usernameMessage;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n   ) {\r\n    this.createForm(); // Create Angular 2 Form when component loads\r\n  }\r\n\r\n  // Function to create registration form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      // Email Input\r\n      email: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(5), // Minimum length is 5 characters\r\n        Validators.maxLength(30), // Maximum length is 30 characters\r\n        this.validateEmail // Custom validation\r\n      ])],\r\n      // Username Input\r\n      username: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(3), // Minimum length is 3 characters\r\n        Validators.maxLength(15), // Maximum length is 15 characters\r\n        this.validateUsername // Custom validation\r\n      ])],\r\n      // Password Input\r\n      password: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(8), // Minimum length is 8 characters\r\n        Validators.maxLength(35), // Maximum length is 35 characters\r\n        this.validatePassword // Custom validation\r\n      ])],\r\n      // Confirm Password Input\r\n      confirm: ['', Validators.required] // Field is required\r\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\r\n  }\r\n\r\n  // Function to disable the registration form\r\n  disableForm() {\r\n    this.form.controls['email'].disable();\r\n    this.form.controls['username'].disable();\r\n    this.form.controls['password'].disable();\r\n    this.form.controls['confirm'].disable();\r\n  }\r\n\r\n  // Function to enable the registration form\r\n  enableForm() {\r\n    this.form.controls['email'].enable();\r\n    this.form.controls['username'].enable();\r\n    this.form.controls['password'].enable();\r\n    this.form.controls['confirm'].enable();\r\n  }\r\n\r\n  // Function to validate e-mail is proper format\r\n  validateEmail(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    // Test email against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid email\r\n    } else {\r\n      return { 'validateEmail': true } // Return as invalid email\r\n    }\r\n  }\r\n\r\n  // Function to validate username is proper format\r\n  validateUsername(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\r\n    // Test username against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid username\r\n    } else {\r\n      return { 'validateUsername': true } // Return as invalid username\r\n    }\r\n  }\r\n\r\n  // Function to validate password\r\n  validatePassword(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\r\n    // Test password against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid password\r\n    } else {\r\n      return { 'validatePassword': true } // Return as invalid password\r\n    }\r\n  }\r\n\r\n  // Funciton to ensure passwords match\r\n  matchingPasswords(password, confirm) {\r\n    return (group: FormGroup) => {\r\n      // Check if both fields are the same\r\n      if (group.controls[password].value === group.controls[confirm].value) {\r\n        return null; // Return as a match\r\n      } else {\r\n        return { 'matchingPasswords': true } // Return as error: do not match\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to submit form\r\n // Function to submit form\r\n  onRegisterSubmit() {\r\n  \tthis.processing = true;\r\n  \tthis.disableForm();\r\n  \t// Create user object form user's inputs\r\n    const user = {\r\n      email: this.form.get('email').value, // E-mail input field\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n    \r\n    this.authService.registerUser(user).subscribe(data => {\r\n     if (!data.success) {\r\n     \tthis.messageClass = 'alert alert-danger';\r\n     \tthis.message = data.message;\r\n     \tthis.processing = false;\r\n     \tthis.enableForm();\r\n     } else {\r\n     \tthis.messageClass = 'alert alert-success';\r\n     \tthis.message = data.message;\r\n     \tsetTimeout(() => {\r\n        this.router.navigate(['/login']); // Redirect to login view\r\n        }, 500);\r\n      }\r\n     });\r\n  }\r\n\r\n  // Function to check if e-mail is taken\r\n  checkEmail() {\r\n    // Function from authentication file to check if e-mail is taken\r\n    this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\r\n      // Check if success true or false was returned from API\r\n      if (!data.success) {\r\n        this.emailValid = false; // Return email as invalid\r\n        this.emailMessage = data.message; // Return error message\r\n      } else {\r\n        this.emailValid = true; // Return email as valid\r\n        this.emailMessage = data.message; // Return success message\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to check if username is available\r\n  checkUsername() {\r\n    // Function from authentication file to check if username is taken\r\n    this.authService.checkUsername(this.form.get('username').value).subscribe(data => {\r\n      // Check if success true or success false was returned from API\r\n      if (!data.success) {\r\n        this.usernameValid = false; // Return username as invalid\r\n        this.usernameMessage = data.message; // Return error message\r\n      } else {\r\n        this.usernameValid = true; // Return username as valid\r\n        this.usernameMessage = data.message; // Return success message\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".row {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n.row .row {\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n[class*=\\\"col-\\\"] {\\r\\n  text-align: center;\\r\\n  padding-top: 15px;\\r\\n  padding-bottom: 15px;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  margin-top: 40px;\\r\\n  margin-bottom: 40px;\\r\\n}\\r\\nh2 {\\r\\n  font-size: 20px;\\r\\n}\\r\\nstrong {\\r\\n  font-size: 25px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/something/something.component.css\n// module id = ../../../../../src/app/components/something/something.component.css\n// module chunks = main","module.exports = \"<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"card col-md-3 border-0\\\">\\r\\n\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"formLeft\\\" (ngSubmit)=\\\"onLeftSubmit()\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<input #searchTextBox (keyup)=\\\"onKeyup(searchTextBox.value)\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"value\\\" formControlName=\\\"value\\\" placeholder=\\\"Add a Link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"list-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t    <li class=\\\"list-group\\\" *ngFor=\\\"let leftThoughts of allLeftThought\\\"><h4  class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"reloadThoughts(leftThoughts._id)\\\">{{ leftThoughts.value }}</h4></li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t<div class=\\\"card col-md-6\\\" *ngIf=\\\"foundThought\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- Bot Level 1 Form/View -->\\r\\n\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"formTop\\\" (ngSubmit)=\\\"onTopSubmit()\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<input #searchTextBox (keyup)=\\\"onKeyup(searchTextBox.value)\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"value\\\" formControlName=\\\"value\\\" placeholder=\\\"Add some Context\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"list-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-group\\\" *ngFor=\\\"let topThoughts of allTopThought\\\"><h4 class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"reloadThoughts(topThoughts._id)\\\">{{ topThoughts.value }}</h4></li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<form [formGroup]=\\\"formMid\\\" (ngSubmit)=\\\"updateThoughtSubmit()\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    \\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"list-group list-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-group\\\"><h2 class=\\\"btn btn-secondary btn-block\\\" *ngIf=\\\"!editMid\\\" (click)=EditMid()>{{ thoughtMid.value }} </h2><input *ngIf=\\\"editMid\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"edit\\\" formControlName=\\\"edit\\\" placeholder=\\\"{{ thoughtMid.value }}\\\"></li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\r\\n\\t\\t<!-- Bot Level 1 Form/View -->\\r\\n\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"formBot\\\" (ngSubmit)=\\\"onBotSubmit()\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"list-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-group\\\" *ngFor=\\\"let botThoughts of allBotThought\\\"><h4  class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"reloadThoughts(botThoughts._id)\\\">{{ botThoughts.value }}</h4></li>\\r\\n\\t\\t\\t\\t\\t\\t    </ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input #searchTextBox (keyup)=\\\"onKeyup(searchTextBox.value)\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"value\\\" formControlName=\\\"value\\\" placeholder=\\\"Add a meaning\\\">\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"card col-md-3 border-0\\\">\\r\\n\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"formRight\\\" (ngSubmit)=\\\"onRightSubmit()\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<input #searchTextBox (keyup)=\\\"onKeyup(searchTextBox.value)\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"value\\\" formControlName=\\\"value\\\" placeholder=\\\"Add a Link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"list-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t    <li class=\\\"list-group\\\" *ngFor=\\\"let rightThoughts of allRightThought\\\"><h4 class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"reloadThoughts(rightThoughts._id)\\\">{{ rightThoughts.value }}</h4></li>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/something/something.component.html\n// module id = ../../../../../src/app/components/something/something.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-something',\r\n  templateUrl: './something.component.html',\r\n  styleUrls: ['./something.component.css']\r\n})\r\nexport class SomethingComponent implements OnInit {\r\n\tmessageClass;\r\n\tmessage;\r\n\tthoughtMid;\r\n\tthoughtTop;\r\n\tthoughtBot;\r\n\tformBot;\r\n\tformTop;\r\n\tformLeft;\r\n\tformRight;\r\n\tformMid;\r\n\tprocessing = false;\r\n\tusername;\r\n \tuserId;\r\n\tthought;\r\n\tvalue;\r\n\tedit;\r\n\tloadingLink;\r\n\tallThought;\r\n\tallBotLink;\r\n\tallBotValue;\r\n\tallLeftThought;\r\n\tallRightThought;\r\n\tuser;\r\n\tcurrentUrl;\r\n\tfoundThought = false;\r\n\tfoundTop = false;\r\n\tfoundBot = false;\r\n\tfoundLeft = false;\r\n\tfoundRight = false;\r\n\tallBotThought;\r\n\tallTopThought;\r\n\tsaveBot;\r\n\tallThoughtArray;\r\n\teditMid = false;\r\n\tthoughtByName;\r\n\r\n\r\n\r\n  constructor(\r\n  \tprivate formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n\tprivate dataService: DataService,\r\n\tprivate activatedRoute: ActivatedRoute,\r\n\tprivate router: Router\r\n\t) {\r\n\r\n\t this.createNewMidForm(); // Create new  form on start up\r\n\t this.createNewBotForm(); // Create new  form on start up\r\n  \t this.createNewTopForm(); // Create new  form on start up\r\n\t this.createNewLeftForm(); // Create new  form on start up\r\n  \t this.createNewRightForm(); // Create new  form on start up\r\n  \t }\r\n  \t   // Function to create new blog form\r\n\tcreateNewMidForm() {\r\n    this.formMid = this.formBuilder.group({\r\n       edit: ''\r\n     })\r\n  }\r\n\r\n  createNewBotForm() {\r\n    this.formBot = this.formBuilder.group({\r\n       value: ''\r\n     })\r\n  }\r\n\r\n  createNewTopForm() {\r\n    this.formTop = this.formBuilder.group({\r\n       value: ''\r\n     })\r\n  }\r\n\r\n  createNewLeftForm() {\r\n    this.formLeft = this.formBuilder.group({\r\n       value: ''\r\n     })\r\n  }\r\n    createNewRightForm() {\r\n    this.formRight = this.formBuilder.group({\r\n       value: ''\r\n     })\r\n  }\r\n\r\n  EditMid() {\r\n  \tif(this.editMid == false) {\r\n  \t\tthis.editMid = true;\r\n  \t} else {\r\n  \t\tthis.editMid = false;\r\n  \t}\r\n\r\n\r\n  }\r\n\r\n    updateThoughtSubmit() {\r\n      const thought = {\r\n    \tedit: this.formMid.get('edit').value, // E-mail input field\r\n      \t_id: this.thoughtMid._id\r\n    };\r\n    this.processing = true; // Lock form fields\t\r\n    // Function to send blog object to backend\r\n    this.dataService.editThought(thought).subscribe(data => {\r\n      // Check if PUT request was a success or not\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set error bootstrap class\r\n        this.message = data.message; // Set error message\r\n        this.processing = false; // Unlock form fields\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set success bootstrap class\r\n        this.message = data.message; // Set success message\r\n        // After two seconds, navigate back to blog page\r\n        this.reloadThoughts(this.thoughtMid._id);\r\n        this.editMid == false;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  onTopSubmit() {\r\n\r\n\r\n    if(this.thoughtByName) {\r\n    \tconst topLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtMid._id, // E-mail input field\r\n\t    top: this.thoughtByName._id // E-mail input field\r\n\t    };\r\n\t    const botLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtByName._id, // E-mail input field\r\n\t    bot: this.thoughtMid._id // E-mail input field\r\n\t    };\r\n\t        this.dataService.newBotLink(botLink).subscribe(data => {\r\n\t    if (!data.success) {\r\n\t       this.messageClass = 'alert alert-danger';\r\n\t       this.message = data.message;\r\n\t       this.processing = false;\r\n\t    } else {\r\n\t       this.messageClass = 'alert alert-success';\r\n\t       this.message = data.message;\r\n\t    }\r\n\t    });\r\n\t    this.dataService.newTopLink(topLink).subscribe(data => {\r\n\t\t    if (!data.success) {\r\n\t\t       this.messageClass = 'alert alert-danger';\r\n\t\t       this.message = data.message;\r\n\t\t       this.processing = false;\r\n\t\t    } else {\r\n\t\t       this.messageClass = 'alert alert-success';\r\n\t\t       this.message = data.message;\r\n\t\t \t   this.reloadThoughts(this.thoughtMid._id);\r\n\t\t       }\r\n\t    \t});\r\n    } else {\r\n    // Create new Object (Bot) with MidId as Top\r\n    const thought = {\r\n      value: this.formTop.get('value').value, // E-mail input field\r\n      user: this.userId,\r\n    };\r\n    // if value = existing value\r\n\r\n    this.dataService.newThought(thought).subscribe(data => {\r\n     if (!data.success) {\r\n       this.messageClass = 'alert alert-danger';\r\n       this.message = data.message;\r\n       this.processing = false;\r\n     } else {\r\n       this.messageClass = 'alert alert-success';\r\n       this.message = data.message;\r\n       this.saveBot = data.newId;\r\n       }\r\n       const topLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtMid._id, // E-mail input field\r\n\t    top: this.saveBot // E-mail input field\r\n\t    };\r\n\t    const botLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.saveBot, // E-mail input field\r\n\t    bot: this.thoughtMid._id // E-mail input field\r\n\t    };\r\n\r\n\t    this.dataService.newBotLink(botLink).subscribe(data => {\r\n\t    if (!data.success) {\r\n\t       this.messageClass = 'alert alert-danger';\r\n\t       this.message = data.message;\r\n\t       this.processing = false;\r\n\t    } else {\r\n\t       this.messageClass = 'alert alert-success';\r\n\t       this.message = data.message;\r\n\t    }\r\n\t    });\r\n\t    this.dataService.newTopLink(topLink).subscribe(data => {\r\n\t\t    if (!data.success) {\r\n\t\t       this.messageClass = 'alert alert-danger';\r\n\t\t       this.message = data.message;\r\n\t\t       this.processing = false;\r\n\t\t    } else {\r\n\t\t       this.messageClass = 'alert alert-success';\r\n\t\t       this.message = data.message;\r\n\t\t \t   this.reloadThoughts(this.thoughtMid._id);\r\n\t\t       }\r\n\t    \t});\r\n\t});\r\n\t}\r\n\tthis.formTop.reset();\r\n}\r\n\r\nonLeftSubmit() {\r\n\tif(this.thoughtByName) {\r\n    \tconst leftLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtMid._id, // E-mail input field\r\n\t    left: this.thoughtByName._id // E-mail input field\r\n\t    };\r\n\t    const rightLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtByName._id, // E-mail input field\r\n\t    right: this.thoughtMid._id // E-mail input field\r\n\t    };\r\n\t        this.dataService.newLeftLink(leftLink).subscribe(data => {\r\n\t    if (!data.success) {\r\n\t       this.messageClass = 'alert alert-danger';\r\n\t       this.message = data.message;\r\n\t       this.processing = false;\r\n\t    } else {\r\n\t       this.messageClass = 'alert alert-success';\r\n\t       this.message = data.message;\r\n\t    }\r\n\t    });\r\n\t    this.dataService.newRightLink(rightLink).subscribe(data => {\r\n\t\t    if (!data.success) {\r\n\t\t       this.messageClass = 'alert alert-danger';\r\n\t\t       this.message = data.message;\r\n\t\t       this.processing = false;\r\n\t\t    } else {\r\n\t\t       this.messageClass = 'alert alert-success';\r\n\t\t       this.message = data.message;\r\n\t\t \t   this.reloadThoughts(this.thoughtMid._id);\r\n\t\t       }\r\n\t    \t});\r\n    } else {\r\n    // Create new Object (Bot) with MidId as Top\r\n    const thought = {\r\n      value: this.formLeft.get('value').value, // E-mail input field\r\n      user: this.userId,\r\n    };\r\n    this.dataService.newThought(thought).subscribe(data => {\r\n     if (!data.success) {\r\n       this.messageClass = 'alert alert-danger';\r\n       this.message = data.message;\r\n       this.processing = false;\r\n     } else {\r\n       this.messageClass = 'alert alert-success';\r\n       this.message = data.message;\r\n       this.saveBot = data.newId;\r\n       }\r\n       const leftLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtMid._id, // E-mail input field\r\n\t    left: this.saveBot // E-mail input field\r\n\t    };\r\n\t    const rightLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.saveBot, // E-mail input field\r\n\t    right: this.thoughtMid._id // E-mail input field\r\n\t    };\r\n\r\n\t    this.dataService.newLeftLink(leftLink).subscribe(data => {\r\n\t    if (!data.success) {\r\n\t       this.messageClass = 'alert alert-danger';\r\n\t       this.message = data.message;\r\n\t       this.processing = false;\r\n\t    } else {\r\n\t       this.messageClass = 'alert alert-success';\r\n\t       this.message = data.message;\r\n\t    }\r\n\t    });\r\n\t    this.dataService.newRightLink(rightLink).subscribe(data => {\r\n\t\t    if (!data.success) {\r\n\t\t       this.messageClass = 'alert alert-danger';\r\n\t\t       this.message = data.message;\r\n\t\t       this.processing = false;\r\n\t\t    } else {\r\n\t\t       this.messageClass = 'alert alert-success';\r\n\t\t       this.message = data.message;\r\n \t\t\t   this.reloadThoughts(this.thoughtMid._id);\r\n\t\t       }\r\n\t    \t});\r\n\t});\r\n}\r\nthis.formLeft.reset();\r\n}\r\n\r\nonRightSubmit() {\r\n\tif(this.thoughtByName) {\r\n    \tconst rightLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtMid._id, // E-mail input field\r\n\t    right: this.thoughtByName._id // E-mail input field\r\n\t    };\r\n\t    const leftLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtByName._id, // E-mail input field\r\n\t    left: this.thoughtMid._id // E-mail input field\r\n\t    };\r\n\t        this.dataService.newRightLink(rightLink).subscribe(data => {\r\n\t    if (!data.success) {\r\n\t       this.messageClass = 'alert alert-danger';\r\n\t       this.message = data.message;\r\n\t       this.processing = false;\r\n\t    } else {\r\n\t       this.messageClass = 'alert alert-success';\r\n\t       this.message = data.message;\r\n\t    }\r\n\t    });\r\n\t    this.dataService.newLeftLink(leftLink).subscribe(data => {\r\n\t\t    if (!data.success) {\r\n\t\t       this.messageClass = 'alert alert-danger';\r\n\t\t       this.message = data.message;\r\n\t\t       this.processing = false;\r\n\t\t    } else {\r\n\t\t       this.messageClass = 'alert alert-success';\r\n\t\t       this.message = data.message;\r\n\t\t \t   this.reloadThoughts(this.thoughtMid._id);\r\n\t\t       }\r\n\t    \t});\r\n    } else {\r\n    // Create new Object (Bot) with MidId as Top\r\n    const thought = {\r\n      value: this.formRight.get('value').value, // E-mail input field\r\n      user: this.userId,\r\n    };\r\n    this.dataService.newThought(thought).subscribe(data => {\r\n     if (!data.success) {\r\n       this.messageClass = 'alert alert-danger';\r\n       this.message = data.message;\r\n       this.processing = false;\r\n     } else {\r\n       this.messageClass = 'alert alert-success';\r\n       this.message = data.message;\r\n       this.saveBot = data.newId;\r\n       }\r\n       const rightLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtMid._id, // E-mail input field\r\n\t    right: this.saveBot // E-mail input field\r\n\t    };\r\n\t    const leftLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.saveBot, // E-mail input field\r\n\t    left: this.thoughtMid._id // E-mail input field\r\n\t    };\r\n\r\n\t    this.dataService.newRightLink(rightLink).subscribe(data => {\r\n\t    if (!data.success) {\r\n\t       this.messageClass = 'alert alert-danger';\r\n\t       this.message = data.message;\r\n\t       this.processing = false;\r\n\t    } else {\r\n\t       this.messageClass = 'alert alert-success';\r\n\t       this.message = data.message;\r\n\t    }\r\n\t    });\r\n\t    this.dataService.newLeftLink(leftLink).subscribe(data => {\r\n\t\t    if (!data.success) {\r\n\t\t       this.messageClass = 'alert alert-danger';\r\n\t\t       this.message = data.message;\r\n\t\t       this.processing = false;\r\n\t\t    } else {\r\n\t\t       this.messageClass = 'alert alert-success';\r\n\t\t       this.message = data.message;\r\n\t\t\t   this.reloadThoughts(this.thoughtMid._id);\t\r\n\t\t       }\r\n\t    \t});\r\n\t});\r\n}\r\nthis.formRight.reset();\r\n}\r\n\r\n\r\n  // Functionality: NewThought(Bot/Top), NotAddLink(Both/One//Top/Bot), EditThought(Bot/Mid/Top), NotDeleteSingleLink(Bot/Top), DeleteBothLink, DeleteThought(Top/Mid/Bot)\r\n  onBotSubmit() {\r\n  \tif(this.thoughtByName) {\r\n    \tconst botLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtMid._id, // E-mail input field\r\n\t    bot: this.thoughtByName._id // E-mail input field\r\n\t    };\r\n\t    const topLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtByName._id, // E-mail input field\r\n\t    top: this.thoughtMid._id // E-mail input field\r\n\t    };\r\n\t        this.dataService.newBotLink(botLink).subscribe(data => {\r\n\t    if (!data.success) {\r\n\t       this.messageClass = 'alert alert-danger';\r\n\t       this.message = data.message;\r\n\t       this.processing = false;\r\n\t    } else {\r\n\t       this.messageClass = 'alert alert-success';\r\n\t       this.message = data.message;\r\n\t    }\r\n\t    });\r\n\t    this.dataService.newTopLink(topLink).subscribe(data => {\r\n\t\t    if (!data.success) {\r\n\t\t       this.messageClass = 'alert alert-danger';\r\n\t\t       this.message = data.message;\r\n\t\t       this.processing = false;\r\n\t\t    } else {\r\n\t\t       this.messageClass = 'alert alert-success';\r\n\t\t       this.message = data.message;\r\n\t\t \t   this.reloadThoughts(this.thoughtMid._id);\r\n\t\t       }\r\n\t    \t});\r\n    } else {\r\n    // Create new Object (Bot) with MidId as Top\r\n    const thought = {\r\n      value: this.formBot.get('value').value, // E-mail input field\r\n      user: this.userId,\r\n    };\r\n    this.dataService.newThought(thought).subscribe(data => {\r\n     if (!data.success) {\r\n       this.messageClass = 'alert alert-danger';\r\n       this.message = data.message;\r\n       this.processing = false;\r\n     } else {\r\n       this.messageClass = 'alert alert-success';\r\n       this.message = data.message;\r\n       this.saveBot = data.newId;\r\n       }\r\n       const botLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.thoughtMid._id, // E-mail input field\r\n\t    bot: this.saveBot // E-mail input field\r\n\t    };\r\n\t    const topLink = {\r\n\t\tuser: this.userId,\r\n\t    mid: this.saveBot, // E-mail input field\r\n\t    top: this.thoughtMid._id // E-mail input field\r\n\t    };\r\n\r\n\t    this.dataService.newBotLink(botLink).subscribe(data => {\r\n\t    if (!data.success) {\r\n\t       this.messageClass = 'alert alert-danger';\r\n\t       this.message = data.message;\r\n\t       this.processing = false;\r\n\t    } else {\r\n\t       this.messageClass = 'alert alert-success';\r\n\t       this.message = data.message;\r\n\t    }\r\n\t    });\r\n\t    this.dataService.newTopLink(topLink).subscribe(data => {\r\n\t\t    if (!data.success) {\r\n\t\t       this.messageClass = 'alert alert-danger';\r\n\t\t       this.message = data.message;\r\n\t\t       this.processing = false;\r\n\t\t    } else {\r\n\t\t       this.messageClass = 'alert alert-success';\r\n\t\t       this.message = data.message;\r\n\t\t       }\r\n\t\t       this.reloadThoughts(this.thoughtMid._id);\r\n\t    \t});\r\n\t});\r\n    }\r\n    this.formBot.reset();\r\n}\r\n\t  // Reload blogs on current page\r\n\t   \treloadThoughts(id) {\r\n\t    this.loadingLink = true; // Used to lock button\r\n\t    this.getMidThought(id);\r\n\t   \tthis.getBotThought(id);\r\n\t   \tthis.getTopThought(id);\r\n\t   \tthis.getLeftThought(id);\r\n\t   \tthis.getRightThought(id);\r\n\t    this.editMid = false;\r\n\t  \t}\r\n\t \t\r\n\t \tgetBotThought(id) {\r\n\t  \t// Function to GET all blogs from database\r\n\t  \tthis.dataService.getBotThought(id).subscribe(data => {\r\n\t  \tthis.allBotThought = data.botThoughts;\r\n\t  \t});\r\n\t  \t}\r\n\r\n\t  \tgetLeftThought(id) {\r\n\t  \t// Function to GET all blogs from database\r\n\t  \tthis.dataService.getLeftThought(id).subscribe(data => {\r\n\t  \tthis.allLeftThought = data.leftThoughts;\r\n\t  \t});\r\n\t  \t}\r\n\r\n\t  \tgetRightThought(id) {\r\n\t  \t// Function to GET all blogs from database\r\n\t  \tthis.dataService.getRightThought(id).subscribe(data => {\r\n\t  \tthis.allRightThought = data.rightThoughts;\r\n\t  \t});\r\n\t  \t}\r\n\r\n\t  \tgetTopThought(id) {\r\n\t  \t// Function to GET all blogs from database\r\n\t  \tthis.dataService.getTopThought(id).subscribe(data => {\r\n\t  \tthis.allTopThought = data.topThoughts;\r\n\t  \t});\r\n\t  \t}\r\n\r\n\t  \tgetMidThought(id) {\r\n \t\t \tthis.dataService.getSingleThought(id).subscribe(data => {\r\n\t      \t// Check if GET request was success or not\r\n\t\t    if (!data.success) {\r\n\t\t        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n\t\t        this.message = data.message; // Set error message\r\n\t\t    } else {\r\n\t\t        this.thoughtMid = {\r\n\t\t        \tvalue: data.thought.value,\r\n\t\t        \t_id: data.thought._id,\r\n\t\t        \t}; // Save blog object for use in HTML\r\n\t\t        this.foundThought = true;\r\n\t\t    }\r\n\t\t    });\r\n\t  \t}\r\n\r\n\t  \tgetThoughtByName(value) {\r\n  \t\t// Function to GET all blogs from database\r\n  \t\tthis.dataService.getThoughtByName(value).subscribe(data => {\r\n  \t\tthis.thoughtByName = \r\n              {\r\n              value: data.thought.value,\r\n              _id: data.thought._id,\r\n              };\r\n  \t\t});\r\n  \t\t}\r\n  \t\t\r\n  \t\tonKeyup(searchText: string) {\r\n    \tthis.getThoughtByName(searchText); // Get all blogs on component load\r\n  \t\t}\r\n\r\n\t ngOnInit() {\r\n\t  \tthis.currentUrl = this.activatedRoute.snapshot.params; // When component loads, grab the id\r\n\t  \t    // Get profile username on page load\r\n\t       \tthis.getMidThought(this.currentUrl.id)\r\n\t       \tthis.getBotThought(this.currentUrl.id)\r\n\t  \t\tthis.getTopThought(this.currentUrl.id)\t  \t\t\r\n\t  \t\tthis.getLeftThought(this.currentUrl.id)\r\n\t  \t\tthis.getRightThought(this.currentUrl.id)\r\n\t  \t\tthis.authService.getProfile().subscribe(profile => {\r\n\t\t    this.username = profile.user.username; // Used when creating new blog posts and comments\r\n\t\t    this.userId = profile.user._id;\r\n\t\t  \t}); \r\n\t    \r\n\t    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/something/something.component.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.loggedIn()) {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/login']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/guards/auth.guard.ts","\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to determine whether user is authorized to view route\r\n  canActivate() {\r\n    // Check if user is logged in\r\n    if (this.authService.loggedIn()) {\r\n      this.router.navigate(['/']); // Return error, route to home\r\n      return false; // Return false: user not allowed to view route\r\n    } else {\r\n      return true; // Return true: user is allowed to view route\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/guards/notAuth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\ndomain = \"http://localhost:8080\";\r\nauthToken;\r\nuser;\r\noptions;\r\n\r\n\r\n  constructor(\r\n  \tprivate http: Http\r\n  \t) { }\r\n\r\n    // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  \t  // Function to get token from client local storage\r\n  \tloadToken() {\r\n    this.authToken = localStorage.getItem('token');; // Get token and asssign to variable to be used elsewhere\r\n  \t}\r\n\r\n  registerUser(user) {\r\n    return this.http.post(this.domain + '/authentication/register', user).map(res => res.json());\r\n  }\r\n  // Function to check if username is taken\r\n  checkUsername(username) {\r\n    return this.http.get(this.domain + '/authentication/checkUsername/' + username).map(res => res.json());\r\n  }\r\n\r\n  // Function to check if e-mail is taken\r\n  checkEmail(email) {\r\n    return this.http.get(this.domain + '/authentication/checkEmail/' + email).map(res => res.json());\r\n  }\r\n  // Function to login user\r\n  login(user) {\r\n    return this.http.post(this.domain + '/authentication/login', user).map(res => res.json());\r\n  }\r\n\r\n   // Function to logout\r\n  logout() {\r\n    this.authToken = null; // Set token to null\r\n    this.user = null; // Set user to null\r\n    localStorage.clear(); // Clear local storage\r\n  }\r\n\r\n   // Function to store user's data in client local storage\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('token', token); // Set token in local storage\r\n    localStorage.setItem('user', JSON.stringify(user)); // Set user in local storage as string\r\n    this.authToken = token; // Assign token to be used elsewhere\r\n    this.user = user; // Set user to be used elsewhere\r\n  }\r\n\r\n  // Function to get user's profile data\r\n  getProfile() {\r\n    this.createAuthenticationHeaders(); // Create headers before sending to API\r\n    return this.http.get(this.domain + '/authentication/profile', this.options).map(res => res.json());\r\n  }\r\n    // Function to check if user is logged in\r\n  loggedIn() {\r\n    return tokenNotExpired();\r\n  }\r\n\r\n}\r\n \r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\t\r\n\toptions;\r\n\tdomain = this.authService.domain;\r\n\r\n  constructor(\r\n  \tprivate authService: AuthService,\r\n  \tprivate http: Http\r\n  \t) { }\r\n\r\n  // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.authService.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authService.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  /* ===============================================================\r\n     GET DATA\r\n  =============================================================== */\r\n    getAllThought() {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/allThought', this.options).map(res => res.json());\r\n  }\r\n     getEverything() {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/everything', this.options).map(res => res.json());\r\n  }\r\n\r\n\r\n    getBotThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/botThought/' + id, this.options).map(res => res.json());\r\n  }\r\n    getTopThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/topThought/' + id, this.options).map(res => res.json());\r\n  }\r\n    getLeftThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/leftThought/' + id, this.options).map(res => res.json());\r\n  } \r\n    getRightThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/rightThought/' + id, this.options).map(res => res.json());\r\n  }\r\n\r\n\r\n    getBotLink() {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/botLink', this.options).map(res => res.json());\r\n  }\r\n  \r\n\r\n    getSingleThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/singleThought/' + id, this.options).map(res => res.json());\r\n  }\r\n\r\n      getThoughtByName(value) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/thoughtByName/' + value, this.options).map(res => res.json());\r\n  }\r\n\r\n\r\n   /* ===============================================================\r\n     DELETE/UPDATE DATA\r\n  =============================================================== */\r\n    deleteThought(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.delete(this.domain + 'datatransfer/deleteThought/' + id, this.options).map(res => res.json());\r\n  }\r\n\r\n   // Function to edit/update blog post\r\n    editThought(thought) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.put(this.domain + 'datatransfer/editThought/', thought, this.options).map(res => res.json());\r\n  }\r\n\r\n/* ===============================================================\r\n     ADD DATA\r\n  =============================================================== */\r\n\r\n    newBotLink(botLink) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + '/datatransfer/newBotLink', botLink, this.options).map(res => res.json());\r\n  }\r\n\r\n    newLeftLink(leftLink) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + '/datatransfer/newLeftLink', leftLink, this.options).map(res => res.json());\r\n  }\r\n\r\n    newRightLink(rightLink) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + '/datatransfer/newRightLink', rightLink, this.options).map(res => res.json());\r\n  }\r\n\r\n    newTopLink(topLink) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + '/datatransfer/newTopLink', topLink, this.options).map(res => res.json());\r\n  }\r\n\r\n\r\n    newThought(thought) {\r\n  \tthis.createAuthenticationHeaders(); // Create headers\r\n  \treturn this.http.post(this.domain + '/datatransfer/newThought', thought, this.options).map(res => res.json());\r\n  }\r\n }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/services/data.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/main.ts"],"sourceRoot":"webpack:///"}