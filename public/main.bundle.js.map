{"version":3,"sources":["C:/Users/loebb/complexity-app/client/src/$_lazy_route_resource lazy","C:/Users/loebb/complexity-app/client/src/app/app-routing.module.ts","C:/Users/loebb/complexity-app/client/src/app/app.component.css","C:/Users/loebb/complexity-app/client/src/app/app.component.html","C:/Users/loebb/complexity-app/client/src/app/app.component.ts","C:/Users/loebb/complexity-app/client/src/app/app.module.ts","C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.css","C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.html","C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.css","C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.html","C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.css","C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.html","C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.css","C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.html","C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.css","C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.html","C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.css","C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.html","C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.ts","C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.css","C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.html","C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.ts","C:/Users/loebb/complexity-app/client/src/app/guards/auth.guard.ts","C:/Users/loebb/complexity-app/client/src/app/guards/notAuth.guard.ts","C:/Users/loebb/complexity-app/client/src/app/services/auth.service.ts","C:/Users/loebb/complexity-app/client/src/app/services/data.service.ts","C:/Users/loebb/complexity-app/client/src/environments/environment.ts","C:/Users/loebb/complexity-app/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core'; \r\nimport { HomeComponent } from './components/home/home.component'; \r\nimport { EverythingComponent } from './components/everything/everything.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { NewComponent } from './components/new/new.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { \r\n  \tpath: '', component: HomeComponent \r\n  },\r\n  { path: 'everything', component: EverythingComponent, canActivate: [AuthGuard] \r\n  },\r\n  { path: 'new', component: NewComponent, canActivate: [AuthGuard] \r\n  },\r\n  { path: 'register', component: RegisterComponent, canActivate: [NotAuthGuard] \r\n  },\r\n  { path: 'login', component: LoginComponent, canActivate: [NotAuthGuard] \r\n  },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] \r\n  },\r\n  {\r\n  \tpath: '**', component: HomeComponent\r\n  }\r\n  ];\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\t<flash-messages></flash-messages>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { EverythingComponent } from './components/everything/everything.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { DataService } from './services/data.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { NewComponent } from './components/new/new.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    EverythingComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    NewComponent\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    HttpModule,\r\n    FlashMessagesModule\r\n  ],\r\n  providers: [AuthService, AuthGuard, NotAuthGuard, DataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.css\n// module id = ../../../../../src/app/components/everything/everything.component.css\n// module chunks = main","module.exports = \"<h1> Everything</h1>\\r\\n\\r\\n<div class=\\\"panel panel-primary\\\" *ngFor=\\\"let thought of allThought\\\">\\r\\n<p class=\\\"panel-title\\\">{{ thought.value }}</p>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.html\n// module id = ../../../../../src/app/components/everything/everything.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { DataService } from '../../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-everything',\r\n  templateUrl: './everything.component.html',\r\n  styleUrls: ['./everything.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EverythingComponent implements OnInit {\r\n\tmessageClass;\r\n\tmessage;\r\n\tform;\r\n\tprocessing = false;\r\n\tusername;\r\n\tvalue;\r\n\tallThought;\r\n\tuser;\r\n\r\n  constructor(\r\n\tprivate formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n\tprivate dataService: DataService\r\n  \t) {\r\n  \t this.createNewThoughtForm(); // Create new blog form on start up\r\n  \t }\r\n  \t   // Function to create new blog form\r\n  createNewThoughtForm() {\r\n    this.form = this.formBuilder.group({\r\n      // Title field\r\n      value: '',\r\n    })\r\n  }\r\n\r\n    getAllThought() {\r\n    // Function to GET all blogs from database\r\n    this.dataService.getAllThought().subscribe(data => {\r\n      this.allThought = data.thought; // Assign array to use in HTML\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get profile username on page load\r\n  \t  this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile.user.username; // Used when creating new blog posts and comments\r\n    });\r\n\r\n    this.getAllThought(); // Get all blogs on component load\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/everything/everything.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\r\\n  <h1>Complexity MEAN Stack Application</h1>\\r\\n  <p class=\\\"lead\\\">Welcome to the Complexity MEAN Stack Application by <strong>Boas Loeb</strong></p>\\r\\n  <div>\\r\\n  \\t<a routerLink=\\\"/register\\\" class=\\\"btn btn-primary\\\">Register</a>\\r\\n  \\t\\t<a routerLink=\\\"/login\\\" class=\\\"btn btn-default\\\">Login</a>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Login Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n\\r\\n  <!-- Username Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Field  -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Submit Button -->\\r\\n  <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form;\r\n  previousUrl;\r\n \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private authGuard: AuthGuard    \r\n  ) {\r\n    this.createForm(); // Create Login Form when component is constructed\r\n  }\r\n\r\n  // Function to create login form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  // Function to disable form\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n\r\n  // Function to enable form\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe(data => {\r\n      // Check if response was a success or error\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data.message; // Set error message\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        this.message = data.message; // Set success message\r\n       this.authService.storeUserData(data.token, data.user)\r\n        // After 2 seconds, redirect to dashboard page\r\n        setTimeout(() => {\r\n          // Check if user was redirected or logging in for first time\r\n          if (this.previousUrl) {\r\n            this.router.navigate([this.previousUrl]); // Redirect to page they were trying to view before\r\n          } else {\r\n            this.router.navigate(['/dashboard']); // Navigate to dashboard view\r\n          }\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // On page load, check if user was redirected to login\r\n    if (this.authGuard.redirectUrl) {\r\n      this.messageClass = 'alert alert-danger'; // Set error message: need to login\r\n      this.message = 'You must be logged in to view that page.'; // Set message\r\n      this.previousUrl = this.authGuard.redirectUrl; // Set the previous URL user was redirected from\r\n      this.authGuard.redirectUrl = undefined; // Erase previous URL\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"  <!-- Fixed navbar -->\\r\\n    <nav class=\\\"navbar navbar-default\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n          </button>\\r\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Complexity-App</a>\\r\\n        </div>\\r\\n        <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n          <ul class=\\\"nav navbar-nav navbar-left\\\">\\r\\n            <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n          </ul>\\r\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n            <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/register\\\">Register</a></li>\\r\\n            <li *ngIf=\\\"!authService.loggedIn()\\\"[routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/login\\\">Login</a></li>\\r\\n             <li *ngIf=\\\"authService.loggedIn()\\\"[routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a></li>\\r\\n             <li *ngIf=\\\"authService.loggedIn()\\\"[routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/profile\\\">Profile</a></li>\\r\\n          \\t<li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/new\\\">New</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/everything\\\">Everything</a></li>\\r\\n          </ul>\\r\\n        </div><!--/.nav-collapse -->\\r\\n      </div>\\r\\n    </nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\nconstructor(\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  // Function to logout user\r\n  onLogoutClick() {\r\n    this.authService.logout(); // Logout user\r\n    this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); // Set custom flash message\r\n    this.router.navigate(['/']); // Navigate back to home page\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.css\n// module id = ../../../../../src/app/components/new/new.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"page-header\\\">New</h2>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Login Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onNewSubmit()\\\">\\r\\n\\r\\n  <!-- Username Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"new\\\">New Thought</label>\\r\\n    <div>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"value\\\" formControlName=\\\"value\\\" />\\r\\n      <!-- Validation -->\\r\\n     </div>\\r\\n  </div>\\r\\n  <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\" />\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.html\n// module id = ../../../../../src/app/components/new/new.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\nimport { DataService } from '../../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-new',\r\n  templateUrl: './new.component.html',\r\n  styleUrls: ['./new.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NewComponent implements OnInit {\r\n  \r\n  form;\r\n  message;\r\n  messageClass;\t\r\n  processing = false;\r\n  allThought;\r\n  username = '';\r\n  constructor(\r\n  \tprivate formBuilder: FormBuilder,\r\n  \tprivate authService: AuthService,\r\n  \tprivate dataService: DataService\r\n  \t) { \r\n  \tthis.createForm();\r\n  }\r\n\r\n  createForm() {\r\n  \tthis.form = this.formBuilder.group({\r\n  \t\tvalue: '',\r\n  \t\tuser: '',\r\n\t\t  linkTo: '', \r\n\t\t  linkFrom: '', \r\n\t\t  equals: ''\r\n  \t})\r\n  }\r\n\r\n\r\n    getAllThought() {\r\n    // Function to GET all blogs from database\r\n    this.dataService.getAllThought().subscribe(data => {\r\n      this.allThought = data.thought; // Assign array to use in HTML\r\n    });\r\n  }\r\n\r\n onNewSubmit() {\r\n  \t// Create user object form user's inputs\r\n    this.processing = true;    \r\n    const thought = {\r\n      value: this.form.get('value').value, // E-mail input field\r\n      user: this.form.get('user').value, // Username input field\r\n      linkTo: this.form.get('linkTo').value, // Password input field\r\n      linkFrom: this.form.get('linkFrom').value, // Password input field\r\n      equals: this.form.get('equals').value // Password input field\r\n     \r\n    }\r\n    \r\n    this.dataService.newThought(thought).subscribe(data => {\r\n     if (!data.success) {\r\n     \tthis.messageClass = 'alert alert-danger';\r\n     \tthis.message = data.message;\r\n     \tthis.processing = false;\r\n     } else {\r\n     \tthis.messageClass = 'alert alert-success';\r\n     \tthis.message = data.message;\r\n     \tthis.getAllThought();\r\n     \t}\r\n     });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get profile username on page load\r\n  \t  this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile.user.username; // Used when creating new blog posts and comments\r\n    });\r\n\r\n    this.getAllThought(); // Get all blogs on component load\r\n  }\r\n}\r\n  \t\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/new/new.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.css\n// module id = ../../../../../src/app/components/profile/profile.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"page-header\\\">Profile Page</h2>\\r\\n<ul class=\\\"list-group\\\">\\r\\n\\t<li class=\\\"list-group-item\\\">Username: {{ username }}</li>\\r\\n\\t<li class=\\\"list-group-item\\\">Email: {{ email }} </li>\\r\\n\\t</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\r\n  username = '';\r\n  email = '';\r\n\r\n\r\n  constructor(\r\n  \tprivate authService: AuthService\r\n  \t) { }\r\n\r\n    ngOnInit() {\r\n    // Once component loads, get user's data to display on profile\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile.user.username; // Set username\r\n      this.email = profile.user.email; // Set e-mail\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"page-header\\\">Register</h1>\\r\\n\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onRegisterSubmit()\\\">\\r\\n\\r\\n  <!-- Username Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\r\\n      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</li>\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">Username must not have any special characters</li>\\r\\n        <li *ngIf=\\\"usernameMessage\\\">{{ usernameMessage }}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Email Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\r\\n      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\"/>\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\r\\n        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\r\\n        <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\">\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 35</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Confirm Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\r\\n      <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Submit Input -->\\r\\n  <input [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\r\\n\\r\\n</form>\\r\\n<!-- Registration Form /-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  form;\r\n  message;\r\n  messageClass;\r\n  processing = false;\r\n  emailValid;\r\n  emailMessage;\r\n  usernameValid;\r\n  usernameMessage;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n   ) {\r\n    this.createForm(); // Create Angular 2 Form when component loads\r\n  }\r\n\r\n  // Function to create registration form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      // Email Input\r\n      email: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(5), // Minimum length is 5 characters\r\n        Validators.maxLength(30), // Maximum length is 30 characters\r\n        this.validateEmail // Custom validation\r\n      ])],\r\n      // Username Input\r\n      username: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(3), // Minimum length is 3 characters\r\n        Validators.maxLength(15), // Maximum length is 15 characters\r\n        this.validateUsername // Custom validation\r\n      ])],\r\n      // Password Input\r\n      password: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(8), // Minimum length is 8 characters\r\n        Validators.maxLength(35), // Maximum length is 35 characters\r\n        this.validatePassword // Custom validation\r\n      ])],\r\n      // Confirm Password Input\r\n      confirm: ['', Validators.required] // Field is required\r\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\r\n  }\r\n\r\n  // Function to disable the registration form\r\n  disableForm() {\r\n    this.form.controls['email'].disable();\r\n    this.form.controls['username'].disable();\r\n    this.form.controls['password'].disable();\r\n    this.form.controls['confirm'].disable();\r\n  }\r\n\r\n  // Function to enable the registration form\r\n  enableForm() {\r\n    this.form.controls['email'].enable();\r\n    this.form.controls['username'].enable();\r\n    this.form.controls['password'].enable();\r\n    this.form.controls['confirm'].enable();\r\n  }\r\n\r\n  // Function to validate e-mail is proper format\r\n  validateEmail(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    // Test email against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid email\r\n    } else {\r\n      return { 'validateEmail': true } // Return as invalid email\r\n    }\r\n  }\r\n\r\n  // Function to validate username is proper format\r\n  validateUsername(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\r\n    // Test username against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid username\r\n    } else {\r\n      return { 'validateUsername': true } // Return as invalid username\r\n    }\r\n  }\r\n\r\n  // Function to validate password\r\n  validatePassword(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\r\n    // Test password against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid password\r\n    } else {\r\n      return { 'validatePassword': true } // Return as invalid password\r\n    }\r\n  }\r\n\r\n  // Funciton to ensure passwords match\r\n  matchingPasswords(password, confirm) {\r\n    return (group: FormGroup) => {\r\n      // Check if both fields are the same\r\n      if (group.controls[password].value === group.controls[confirm].value) {\r\n        return null; // Return as a match\r\n      } else {\r\n        return { 'matchingPasswords': true } // Return as error: do not match\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to submit form\r\n // Function to submit form\r\n  onRegisterSubmit() {\r\n  \tthis.processing = true;\r\n  \tthis.disableForm();\r\n  \t// Create user object form user's inputs\r\n    const user = {\r\n      email: this.form.get('email').value, // E-mail input field\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n    \r\n    this.authService.registerUser(user).subscribe(data => {\r\n     if (!data.success) {\r\n     \tthis.messageClass = 'alert alert-danger';\r\n     \tthis.message = data.message;\r\n     \tthis.processing = false;\r\n     \tthis.enableForm();\r\n     } else {\r\n     \tthis.messageClass = 'alert alert-success';\r\n     \tthis.message = data.message;\r\n     \tsetTimeout(() => {\r\n        this.router.navigate(['/login']); // Redirect to login view\r\n        }, 2000);\r\n      }\r\n     });\r\n  }\r\n\r\n  // Function to check if e-mail is taken\r\n  checkEmail() {\r\n    // Function from authentication file to check if e-mail is taken\r\n    this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\r\n      // Check if success true or false was returned from API\r\n      if (!data.success) {\r\n        this.emailValid = false; // Return email as invalid\r\n        this.emailMessage = data.message; // Return error message\r\n      } else {\r\n        this.emailValid = true; // Return email as valid\r\n        this.emailMessage = data.message; // Return success message\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to check if username is available\r\n  checkUsername() {\r\n    // Function from authentication file to check if username is taken\r\n    this.authService.checkUsername(this.form.get('username').value).subscribe(data => {\r\n      // Check if success true or success false was returned from API\r\n      if (!data.success) {\r\n        this.usernameValid = false; // Return username as invalid\r\n        this.usernameMessage = data.message; // Return error message\r\n      } else {\r\n        this.usernameValid = true; // Return username as valid\r\n        this.usernameMessage = data.message; // Return success message\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/components/register/register.component.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.loggedIn()) {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/login']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/guards/auth.guard.ts","\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to determine whether user is authorized to view route\r\n  canActivate() {\r\n    // Check if user is logged in\r\n    if (this.authService.loggedIn()) {\r\n      this.router.navigate(['/']); // Return error, route to home\r\n      return false; // Return false: user not allowed to view route\r\n    } else {\r\n      return true; // Return true: user is allowed to view route\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/guards/notAuth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\ndomain = \"http://localhost:8080\";\r\nauthToken;\r\nuser;\r\noptions;\r\n\r\n\r\n  constructor(\r\n  \tprivate http: Http\r\n  \t) { }\r\n\r\n    // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  \t  // Function to get token from client local storage\r\n  \tloadToken() {\r\n    this.authToken = localStorage.getItem('token');; // Get token and asssign to variable to be used elsewhere\r\n  \t}\r\n\r\n  registerUser(user) {\r\n    return this.http.post(this.domain + '/authentication/register', user).map(res => res.json());\r\n  }\r\n  // Function to check if username is taken\r\n  checkUsername(username) {\r\n    return this.http.get(this.domain + '/authentication/checkUsername/' + username).map(res => res.json());\r\n  }\r\n\r\n  // Function to check if e-mail is taken\r\n  checkEmail(email) {\r\n    return this.http.get(this.domain + '/authentication/checkEmail/' + email).map(res => res.json());\r\n  }\r\n  // Function to login user\r\n  login(user) {\r\n    return this.http.post(this.domain + '/authentication/login', user).map(res => res.json());\r\n  }\r\n\r\n   // Function to logout\r\n  logout() {\r\n    this.authToken = null; // Set token to null\r\n    this.user = null; // Set user to null\r\n    localStorage.clear(); // Clear local storage\r\n  }\r\n\r\n   // Function to store user's data in client local storage\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('token', token); // Set token in local storage\r\n    localStorage.setItem('user', JSON.stringify(user)); // Set user in local storage as string\r\n    this.authToken = token; // Assign token to be used elsewhere\r\n    this.user = user; // Set user to be used elsewhere\r\n  }\r\n\r\n  // Function to get user's profile data\r\n  getProfile() {\r\n    this.createAuthenticationHeaders(); // Create headers before sending to API\r\n    return this.http.get(this.domain + '/authentication/profile', this.options).map(res => res.json());\r\n  }\r\n    // Function to check if user is logged in\r\n  loggedIn() {\r\n    return tokenNotExpired();\r\n  }\r\n\r\n}\r\n \r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AuthService } from './auth.service';\r\nimport 'rxjs/add/operator/map';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\t\r\n\toptions;\r\n\tuser;\r\n\tdomain = this.authService.domain;\r\n\r\n  constructor(\r\n  \tprivate authService: AuthService,\r\n  \tprivate http: Http\r\n  \t) { }\r\n\r\n  // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.authService.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authService.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n // Function to get all blogs from the database\r\n  getAllThought() {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + '/datatransfer/allThought', this.options).map(res => res.json());\r\n  }\r\n  newThought(thought) {\r\n  \tthis.createAuthenticationHeaders(); // Create headers\r\n  \treturn this.http.post(this.domain + '/datatransfer/newThought', thought, this.options).map(res => res.json());\r\n  }\r\n }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/app/services/data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/loebb/complexity-app/client/src/main.ts"],"sourceRoot":"webpack:///"}